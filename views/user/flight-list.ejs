<%- include('./partials/header') %>
  <%- include('./partials/userHeader') %>

    <!-- **************** MAIN CONTENT START **************** -->
    <main>
      <!-- =======================
    Search START -->
      <section class="pt-0">
        <div class="container">
          <div class="row">
            <div class="col-12">
              <!-- Booking from START -->
              <form class="bg-mode border rounded position-relative px-4 pt-4 mb-4 mb-sm-0" action="/flight-list"
                method="post">
                <div class="row g-4">
                  <!-- Nav tabs START -->
                  <div class="col-lg-6">
                    <ul class="nav nav-pills nav-pills-dark" id="pills-tab" role="tablist">
                      <li class="nav-item" role="presentation">
                        <button
                          class="nav-link rounded-start rounded-0 mb-0 <%= !requestDetails.flexible ? 'active' : '' %>"
                          id="pills-one-way-tab" data-bs-toggle="pill" data-bs-target="#pills-one-way" type="button"
                          role="tab" aria-selected="<%= !requestDetails.flexible %>" onclick="toggleCheckbox(false)">
                          Fixed Date
                        </button>
                      </li>
                      <li class="nav-item" role="presentation">
                        <button
                          class="nav-link rounded-end rounded-0 mb-0 <%= requestDetails.flexible ? 'active' : '' %>"
                          id="pills-round-trip-tab" data-bs-toggle="pill" data-bs-target="#pills-round-trip"
                          type="button" role="tab" aria-selected="<%= !requestDetails.flexible %>"
                          onclick="toggleCheckbox(true)">
                          Flexible Date
                        </button>
                      </li>
                    </ul>
                  </div>

                  <!-- Hidden Checkbox -->
                  <input hidden type="checkbox" id="dateTypeCheckbox" name="dateTypeCheckbox" <%=requestDetails.flexible
                    ? "checked" : "" %> />


                  <script>
                    function toggleCheckbox(isChecked) {
                      document.getElementById("dateTypeCheckbox").checked = isChecked;
                    }
                  </script>

                  <!-- Nav tabs END -->

                  <!-- Ticket Passenger -->
                  <div class="col-lg-4 ms-auto">
                    <div class="form-control-bg-light form-fs-md position-relative">
                      
                      <div class="w-100">
                        <div class="dropdown guest-selector me-2">
                            <input type="text" class="form-guest-selector form-control flight-result"
                                 data-bs-auto-close="outside" data-bs-toggle="dropdown">
                            <ul class="dropdown-menu guest-selector-dropdown">
                                <li class="d-flex justify-content-between">
                                    <div>
                                        <h6 class="mb-0">Adults</h6>
                                        <small>Ages 13 or above</small>
                                    </div>
                                    <div class="hstack gap-1 align-items-center">
                                        <button type="button" class="btn btn-link adult-remove p-0 mb-0"><i
                                                class="bi bi-dash-circle fs-5 fa-fw"></i></button>
                                        <h6 class="guest-selector-count mb-0 adults" id="adults" name="adults" value="<%= requestDetails.adults %>" >1</h6>
                                        <button type="button" class="btn btn-link adult-add p-0 mb-0"><i
                                                class="bi bi-plus-circle fs-5 fa-fw"></i></button>
                                    </div>
                                </li>
                    
                                <li class="dropdown-divider"></li>
                    
                                <li class="d-flex justify-content-between">
                                    <div>
                                        <h6 class="mb-0">Children</h6>
                                        <small>Ages 13 below</small>
                                    </div>
                    
                                    <div class="hstack gap-1 align-items-center">
                                        <button type="button" class="btn btn-link child-remove p-0 mb-0"><i
                                                class="bi bi-dash-circle fs-5 fa-fw"></i></button>
                                        <h6 class="guest-selector-count mb-0 child" id="children" name="children" value="<%= requestDetails.children %>">0</h6>
                                        <button type="button" class="btn btn-link child-add p-0 mb-0"><i
                                                class="bi bi-plus-circle fs-5 fa-fw"></i></button>
                                    </div>
                                </li>
                    
                                <li class="dropdown-divider"></li>
                    
                                <li class="d-flex justify-content-between">
                                    <div>
                                        <h6 class="mb-0">Infants</h6>
                                        <small>Ages 2 below</small>
                                    </div>
                    
                                    <div class="hstack gap-1 align-items-center">
                                        <button type="button" class="btn btn-link infant-remove p-0 mb-0"><i
                                                class="bi bi-dash-circle fs-5 fa-fw"></i></button>
                                        <h6 class="guest-selector-count mb-0 infant" id="infants" name="infants" value="<%= requestDetails.infants %>">0</h6>
                                        <button type="button" class="btn btn-link infant-add p-0 mb-0"><i
                                                class="bi bi-plus-circle fs-5 fa-fw"></i></button>
                                    </div>
                                </li>

                                <input type="hidden" name="adults" id="adultsInput" value="<%= requestDetails.adults %>" />
<input type="hidden" name="children" id="childrenInput" value="<%= requestDetails.children %>" />
<input type="hidden" name="infants" id="infantsInput" value="<%= requestDetails.infants %>" />
                    
                            </ul>
                        </div>
                      </div>
                    </div>
                  </div>

                  <!-- Tab content START -->
                  <div class="tab-content mt-4" id="pills-tabContent">
                    <!-- One way tab START -->
                    <div class="tab-pane fade show <%= !requestDetails.flexible ? 'active' : '' %>" id="pills-one-way"
                      role="tabpanel" aria-labelledby="pills-one-way-tab">
                      <div class="row g-4">
                        <!-- Leaving From -->
                        <div class="col-md-6 col-lg-4 position-relative">
                          <div class="form-border-transparent form-fs-lg bg-light rounded-3 h-100 p-3">
                            <!-- Input field -->
                            <label class="mb-1"><i class="bi bi-geo-alt me-2"></i>From</label>
                            
                             <select class="form-select js-airport" id="fixedFrom" name="fixedFrom" 
                             data-selected="<%= requestDetails.fixedFrom %>">
                              <option value="">Select location</option>
                              </select>

                          </div>

                          <!-- Auto fill button -->
                          <div class="btn-flip-icon mt-3 mt-md-0">
                            <button class="btn btn-white shadow btn-round mb-0" type="button" onclick="swapValues()">
                              <i class="fa-solid fa-right-left"></i>
                            </button>
                          </div>
                        </div>

                        <!-- Going To -->
                        <div class="col-md-6 col-lg-4">
                          <div class="form-border-transparent form-fs-lg bg-light rounded-3 h-100 p-3">
                            <!-- Input field -->
                            <label class="mb-1"><i class="bi bi-send me-2"></i>To</label>
                              <select class="form-select js-airport" id="fixedTo"
                              name="fixedTo" data-selected="<%= requestDetails.fixedTo %>">
                              <option value="">Select location</option>
                              </select>
                          </div>
                        </div>

                        <!-- Departure -->
                        <div class="col-lg-4">
                          <div class="form-border-transparent form-fs-lg bg-light rounded-3 h-100 p-3">
                            <label class="mb-1"><i class="bi bi-calendar me-2"></i>Departure</label>
                            <input type="text" class="form-control flatpickr" placeholder="Select date"
                              data-date-format="d M Y" id="departure" name="departure"
                              value="<%= requestDetails.departure || '' %>" />
                          </div>
                        </div>

                        <div class="col-12 text-end pt-0">
                          <button class="btn btn-primary mb-n4" type="submit">Modify Search <i
                              class="bi bi-arrow-right ps-3"></i></button>
                        </div>
                      </div>
                    </div>
                    <!-- One way tab END -->

                    <!-- Round way tab END -->
                    <div class="tab-pane fade show <%= requestDetails.flexible ? 'active' : '' %>" id="pills-round-trip"
                      role="tabpanel" aria-labelledby="pills-round-trip-tab">
                      <div class="row g-4">
                        <!-- Leaving From -->
                        <div class="col-md-6 col-xl-3 position-relative">
                          <div class="form-border-transparent form-fs-lg bg-light rounded-3 h-100 p-3">
                            <!-- Input field -->
                            <label class="mb-1"><i class="bi bi-geo-alt me-2"></i>From</label>
                              <select class="form-select js-airport" id="from"
                              name="from" data-selected="<%= requestDetails.from %>">
                              <option value="">Select location</option>
                              </select>
                          </div>

                          <!-- Auto fill button -->
                          <div class="btn-flip-icon mt-3 mt-md-0">
                            <button class="btn btn-white shadow btn-round mb-0" type="button" onclick="swapValues()">
                              <i class="fa-solid fa-right-left"></i>
                            </button>
                          </div>
                        </div>

                        <!-- Going To -->
                        <div class="col-md-6 col-xl-3">
                          <div class="form-border-transparent form-fs-lg bg-light rounded-3 h-100 p-3">
                            <!-- Input field -->
                            <label class="mb-1"><i class="bi bi-send me-2"></i>To</label>
                                <select class="form-select js-airport" id="to"
                                name="to" data-selected="<%= requestDetails.to %>">
                                <option value="">Select location</option>
                                </select>
                          </div>
                        </div>

                        <!-- Departure -->
                        <div class="col-md-6 col-xl-3">
                          <div class="form-border-transparent form-fs-lg bg-light rounded-3 h-100 p-3">
                            <label class="mb-1"><i class="bi bi-calendar me-2"></i>Departure</label>
                            <input type="text" class="form-control flatpickr" data-date-format="d M Y"
                              placeholder="Select date" id="departure" name="departureDate"
                              value="<%= requestDetails.departureDate || '' %>" />
                          </div>
                        </div>

                        <!-- Return -->
                        <div class="col-md-6 col-xl-3">
                          <div class="form-border-transparent form-fs-lg bg-light rounded-3 h-100 p-3">
                            <label class="mb-1"><i class="bi bi-calendar me-2"></i>Return</label>
                            <input type="text" class="form-control flatpickr" data-date-format="d M Y"
                              placeholder="Select date" id="return" name="returnDate"
                              value="<%= requestDetails.returnDate || '' %>" />
                          </div>
                        </div>

                        <div class="col-12 text-end pt-0">
                          <button class="btn btn-primary mb-n4" type="submit">Modify Search <i
                              class="bi bi-arrow-right ps-3"></i></button>
                        </div>
                      </div>
                    </div>
                    <!-- Round way tab END -->
                  </div>
                  <!-- Tab content END -->
              </form>
              <!-- Booking from END -->
            </div>
          </div>
        </div>
      </section>
      <!-- =======================
    Search START -->

    <script>
      const requestDetails = {
        adults: "<%= requestDetails.adults %>",
        children: "<%= requestDetails.children %>",
        infants: "<%= requestDetails.infants %>"
      };
      console.log(requestDetails)
    </script>
    
    <script>
      document.addEventListener("DOMContentLoaded", function () {
          const adultsCountElement = document.getElementById("adults");
          const childrenCountElement = document.getElementById("children");
          const infantsCountElement = document.getElementById("infants");
          const adultAddButton = document.querySelector(".adult-add");
          const adultRemoveButton = document.querySelector(".adult-remove");
          const childAddButton = document.querySelector(".child-add");
          const childRemoveButton = document.querySelector(".child-remove");
          const infantAddButton = document.querySelector(".infant-add");
          const infantRemoveButton = document.querySelector(".infant-remove");
          const guestSelectorInput = document.querySelector(".form-guest-selector");
  
          let adults = parseInt(requestDetails.adults || adultsCountElement.textContent);
          let children = parseInt(requestDetails.children || childrenCountElement.textContent);
          let infants = parseInt(requestDetails.infants || infantsCountElement.textContent);
  
          function updateGuestCount() {
              adultsCountElement.textContent = adults;
              adultsCountElement.value= adults
              childrenCountElement.textContent = children;
              infantsCountElement.textContent = infants;
              const totalPassengers = adults + children + infants;
              guestSelectorInput.value = `${totalPassengers} Passenger${totalPassengers > 1 ? "s" : ""}`;
              document.getElementById("adultsInput").value = adults;
              document.getElementById("childrenInput").value = children;
              document.getElementById("infantsInput").value = infants;
          }
  
          adultAddButton.addEventListener("click", function () {
              adults++;
              updateGuestCount();
          });
  
          adultRemoveButton.addEventListener("click", function () {
              if (adults > 0) { // Ensure at least 1 adult
                  adults--;
                  updateGuestCount();
              }
          });
  
          childAddButton.addEventListener("click", function () {
              children++;
              updateGuestCount();
          });
  
          childRemoveButton.addEventListener("click", function () {
              if (children > 0) {
                  children--;
                  updateGuestCount();
              }
          });
  
          infantAddButton.addEventListener("click", function () {
              infants++;
              updateGuestCount();
          });
  
          infantRemoveButton.addEventListener("click", function () {
              if (infants > 0) {
                  infants--;
                  updateGuestCount();
              }
          });
  
          updateGuestCount(); // Initialize count on load
  
  
      });
  </script>

      <script>
        document.addEventListener("DOMContentLoaded", function () {
          const today = new Date();
          today.setHours(0, 0, 0, 0); // Normalize time

          const departureInputs = document.querySelectorAll("[id='departure']"); // Select multiple departure inputs
          const returnInput = document.querySelector("#return"); // Only one return input

          // Initialize Departure Date Pickers
          departureInputs.forEach((departureInput) => {
            flatpickr(departureInput, {
              dateFormat: "d M Y",
              minDate: today, // ✅ Ensure minDate is today
              disableMobile: true,
              onChange: function (selectedDates) {
                const departureDate = selectedDates[0];

                // Ensure return date is after the selected departure date
                if (returnInput) {
                  returnPicker.set("minDate", departureDate);
                }
              },
            });
          });

          // Initialize Return Date Picker
          const returnPicker = flatpickr(returnInput, {
            dateFormat: "d M Y",
            minDate: today, // ✅ Ensure minDate is today
            disableMobile: true,
            onChange: function (selectedDates) {
              const returnDate = selectedDates[0];

              // Ensure departure date is before return date
              departureInputs.forEach((departureInput) => {
                if (departureInput.value && new Date(departureInput.value) >= returnDate) {
                  departureInput._flatpickr.setDate(returnDate, true);
                }
              });
            },
          });
        });

      </script>

      <script>
        function swapValues() {
          console.log("Swap button clicked!");

          const isFlexible = document.getElementById("dateTypeCheckbox").checked;
          let fromSelect = isFlexible ? document.getElementById("from") : document.getElementById("fixedFrom");
          let toSelect = isFlexible ? document.getElementById("to") : document.getElementById("fixedTo");

          // Swap values
          let tempValue = fromSelect.value;
          fromSelect.value = toSelect.value;
          toSelect.value = tempValue;

        }
      </script>

      <!-- =======================
    Title and notice board START -->
      <section class="pt-0">
        <div class="container position-relative">
          <!-- Title and button START -->
          <div class="row">
            <div class="col-12">
              <div class="d-sm-flex justify-content-sm-between align-items-center">
                <!-- Title -->
                <div class="mb-3 mb-sm-0">
                  <h1 class="fs-3">
                    <%= refilteredFlights.length %> Flight Available
                  </h1>
                  <ul class="nav nav-divider h6 mb-0">
                    <li>
                      <% if (requestDetails.departure) { %>
                        <%= requestDetails.departure %>
                          <% } else if(requestDetails.departureDate && requestDetails.returnDate){ %>
                            <%= requestDetails.departureDate %> - <%= requestDetails.returnDate %>
                                <% } %>
                    </li>
                  </ul>
                </div>

					<!-- Offcanvas Button -->
                <button class="btn btn-primary d-xl-none mb-0" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasSidebar" aria-controls="offcanvasSidebar">
                  <i class="fa-solid fa-sliders-h me-1"></i> Show filters
                </button>

              </div>
            </div>
          </div>
          <!-- Title and button END -->


        </div>
      </section>
      <!-- =======================
    Title and notice board END -->

      <!-- =======================
    Flight list START -->
      <section class="pt-0">
        <div class="container">
          <div class="row">
            <!-- Left sidebar START -->
			<aside class="col-xl-4 col-xxl-3">
				<!-- Responsive offcanvas body START -->
					<div class="offcanvas-xl offcanvas-end" tabindex="-1" id="offcanvasSidebar" aria-labelledby="offcanvasSidebarLabel">
						<!-- Offcanvas header -->
						<div class="offcanvas-header">
							<h5 class="offcanvas-title" id="offcanvasSidebarLabel">Advance Filters</h5>
							<button  type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#offcanvasSidebar" aria-label="Close"></button>
						</div>

						<!-- Offcanvas body -->
						<div class="offcanvas-body flex-column p-3 p-xl-0">
							
              <form method="post" action="/flight-list" class="rounded-3 shadow w-100">
                <!-- Popular filters -->
                <div class="card card-body rounded-0 rounded-top p-4">
                  <h6 class="mb-2">Popular Filters</h6>
                  <div class="col-12">
                    <div class="form-check">
                      <input class="form-check-input" type="checkbox" id="refundable" name="refundable" value="true">
                      <label class="form-check-label" for="refundable">Refundable Fare</label>
                    </div>
                  </div>
                </div>
              
                <hr class="my-0">
              
                <!-- Price filter -->
                <div class="card card-body rounded-0 p-4">
                  <h6 class="mb-2">Price</h6>
                  <div class="position-relative">
                    <div class="noui-wrapper">
                      <div class="d-flex justify-content-between">
                        <input type="text" class="text-body input-with-range-min" name="minPrice" value="<%= minFare %>">
                        <input type="text" class="text-body input-with-range-max" name="maxPrice" value="<%= maxFare %>">                        
                      </div>
                      <div class="noui-slider-range mt-2"
                      data-range-min="<%= minFare %>"
                      data-range-max="<%= maxFare %>"
                      data-range-selected-min="<%= minFare %>"
                      data-range-selected-max="<%= maxFare %>"></div>                  </div>
                  </div>
                </div>
              
                <hr class="my-0">
              
                <!-- Onward Stops -->
                <div class="card card-body rounded-0 p-4">
                  <h6 class="mb-2">Onward Stops</h6>
                  <ul class="list-inline mb-0 g-3">
                    <li class="list-inline-item mb-0">
                      <input type="checkbox" class="btn-check" id="onward-direct" name="stops" value="0">
                      <label class="btn btn-sm btn-light btn-primary-soft-check" for="onward-direct">Direct</label>
                    </li>
                    <li class="list-inline-item mb-0">
                      <input type="checkbox" class="btn-check" id="onward-1stop" name="stops" value="1">
                      <label class="btn btn-sm btn-light btn-primary-soft-check" for="onward-1stop">1 Stop</label>
                    </li>
                    <li class="list-inline-item mb-0">
                      <input type="checkbox" class="btn-check" id="onward-2plus" name="stops" value="2">
                      <label class="btn btn-sm btn-light btn-primary-soft-check" for="onward-2plus">2+ Stops</label>
                    </li>
                  </ul>
                </div>
              
                <hr class="my-0">
              
                <!-- Preferred Airline -->
                <div class="card card-body rounded-0 p-4">
                  <h6 class="mb-2">Preferred Airline</h6>
                  <div class="col-12">
                    <% availableAirlines.forEach((airline, index) => { %>
                      <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="airlines" value="<%= airline %>" id="airline<%= index %>">
                        <label class="form-check-label" for="airline<%= index %>"><%= airline %></label>
                      </div>
                    <% }); %>
                  </div>
                </div>
              
                <hr class="my-0">
              
                <!-- Layover Airport -->
                <div class="card card-body rounded-0 rounded-bottom p-4">
                  <h6 class="mb-2">Layover Airport</h6>
                  <div class="col-12">
                    <% availableLayovers.forEach((city, index) => { %>
                      <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="layovers" value="<%= city %>" id="layover<%= index %>">
                        <label class="form-check-label" for="layover<%= index %>"><%= city %></label>
                      </div>
                    <% }); %>
                  </div>
                </div>
              
                <input type="hidden" name="from" value="<%= requestDetails.from %>">
<input type="hidden" name="to" value="<%= requestDetails.to %>">
<input type="hidden" name="fixedFrom" value="<%= requestDetails.fixedFrom %>">
<input type="hidden" name="fixedTo" value="<%= requestDetails.fixedTo %>">
<input type="hidden" name="departureDate" value="<%= requestDetails.departureDate %>">
<input type="hidden" name="returnDate" value="<%= requestDetails.returnDate %>">
<input type="hidden" name="departure" value="<%= requestDetails.departure %>">
<input type="hidden" name="flexible" value="<%= requestDetails.flexible %>">
<input type="hidden" name="adults" value="<%= requestDetails.adults %>">
<input type="hidden" name="children" value="<%= requestDetails.children %>">
<input type="hidden" name="infants" value="<%= requestDetails.infants %>">

                <!-- Form buttons -->
                <div class="d-flex justify-content-between p-2 p-xl-2 mt-xl-4">
                  <a href="/flight-list" class="btn btn-link p-0 mb-0">Clear all</a>
                  <button type="submit" class="btn btn-primary mb-0">Filter Result</button>
                </div>
              </form>

						</div>
						<!-- Buttons -->
						
					</div>
				<!-- Responsive offcanvas body END -->
			</aside>
			<!-- Left sidebar END -->

            <!-- Main content START -->
            <div class="col-xl-8 col-xxl-9">
              <div class="vstack gap-4">
                <div id="flight-list">
                  <% if (refilteredFlights.length> 0) { %>
                    <% refilteredFlights.forEach((flight)=> { %>

                      <!-- Ticket item START -->
                      <div class="card border mb-3">
                        <!-- Card header -->
                        <div class="card-header d-sm-flex justify-content-sm-between align-items-center">
                          <!-- Airline Name -->
                          <div class="d-flex align-items-center mb-2 mb-sm-0">
                            <img src="<%= flight.stops[0].airlineLogo %>" class="w-30px me-2" alt="">
                            <h6 class="fw-normal mb-0">
                              <%= flight.stops[0].airline %> (<%= flight.stops[0].flightNumber %>)
                            </h6>
                          </div>
                        </div>

                        <!-- Card body START -->
                        <div class="card-body p-4 pb-0">
                          <!-- Ticket START -->
                          <div class="row g-4">

                            <div class="col-sm-4 col-md-3">
                              <h4>
                                <%= flight.departureTime %>
                              </h4>
                              <h6 class="mb-0 fw-normal">
                                <%= new Date(flight.departureDate).toDateString() %>
                              </h6>
                              <p class="mb-0">
                                <%= flight.from.toUpperCase() %>
                                  <% if (flight.stops[0]?.fromTerminal) { %>
                                    - Terminal <%= flight.stops[0].fromTerminal %>
                                      <% } %>
                              </p>
                              <p class="mb-0">
                                <%= flight.fromCity %>, <%= flight.fromCountry %>
                              </p>
                            </div>
                            <!-- Time -->
                            <div class="col-sm-4 col-md-3 my-sm-auto text-center">
                               
                                <h5>
                                  <%= flight.duration %>
                                </h5>

                                <div class="position-relative my-4">
                                  <hr class="bg-primary opacity-5 position-relative">
                                  <div
                                    class="icon-md bg-primary text-white rounded-circle position-absolute top-50 start-50 translate-middle">
                                    <i class="fa-solid fa-fw fa-plane rtl-flip"></i>
                                  </div>
                                </div>
                                <h5>
                                  <% if (flight.stops.length===0) { %>
                                    Non-stop
                                    <% } else if (flight.stops.length===1) { %>
                                      1 stop
                                      <% } else { %>
                                        <%= flight.stops.length %> stops
                                          <% } %>
                                </h5>

                            </div>

                            <div class="col-sm-4 col-md-3">
                              <h4>
                                <%= flight.arrivalTime %>
                              </h4>
                              <h6 class="mb-0 fw-normal">
                                <%= new Date(flight.arrivalDate).toDateString() %>
                              </h6>
                              <p class="mb-0">
                                <%= flight.to.toUpperCase() %>
                                  <% const lastStop=flight.stops[flight.stops.length - 1]; %>
                                    <% if (lastStop?.toTerminal) { %>
                                      - Terminal <%= lastStop.toTerminal %>
                                        <% } %>
                              </p>
                              <p class="mb-0">
                                <%= flight.toCity %>, <%= flight.toCountry %>
                              </p>
                            </div>

                            <!-- Price START -->
                            <div class="col-md-3 text-md-end">
                              <!-- Price -->
                              <div class="d-flex align-items-center justify-content-md-end mb-2">
                                <h4>₹ <%= flight.inventoryDates[0].fare.adults %></h4>
                                <button type="button" class="btn btn-sm btn-outline-info ms-2 price-calc-btn" 
                                  data-flight-id="<%= flight._id %>"
                                  data-adult-fare="<%= flight.inventoryDates[0].fare.adults %>"
                                  data-infant-fare="<%= flight.inventoryDates[0].fare.infants %>">
                                  <i class="bi bi-info-circle"></i>
                                </button>
                              </div>
                              <button class="btn btn-dark mb-0 mb-sm-2 book-now-btn"
                                onclick="bookNow('<%= flight._id%>')">
                                Select
                              </button>
                              <!-- <a href="/flights" class="btn btn-dark mb-0 mb-sm-2 book-now-btn" >
                          Select
                        </a> -->
                              <!-- <button class="btn btn-link text-decoration-underline p-0 mb-0 flight-detail-btn"
                                data-bs-toggle="modal" data-bs-target="#flightdetail"
                                data-flight='<%= JSON.stringify(flight) %>'
                                data-user='<%= JSON.stringify(user || null) %>'
                              >
                                <i class="bi bi-eye-fill me-1"></i>Flight Details
                              </button> -->

                            </div>
                            <!-- Price END -->
                          </div> <!-- Row END -->


                          <!-- Card footer -->
                          <!-- <div class="card-footer pt-4">
                            <ul
                              class="list-inline bg-light d-sm-flex text-center justify-content-sm-between rounded-2 py-2 px-4 mb-0">
                              <li class="list-inline-item text-danger">Only <%= flight.inventoryDates[0].seats %> Seat
                                  Left</li>
                              <% if (flight.refundable===true) { %>
                                <li class="list-inline-item text-success">Refundable</li>
                                <% } else { %>
                                  <li class="list-inline-item text-danger">Non-Refundable</li>
                                  <% } %>
                            </ul>
                          </div> -->

                        </div>
                        <!-- Ticket item END -->
                      </div>

                      <% }) %>
                        <% } else { %>
                          <!-- No flights available message -->
                          <div class="text-center py-5">
                            <h4 class="text-muted">No flights are available</h4>
                          </div>
                          <% } %>

                </div>
              </div>
            </div>
            <!-- Main content END -->

          </div>
          <!-- Row END -->
        </div>
      </section>

      <script>
        // Initialize tooltips and update when passenger counts change
        document.addEventListener("DOMContentLoaded", () => {
          updatePriceTooltips();
          
          // Add event listeners to passenger count buttons
          document.getElementById("decreaseAdults").addEventListener("click", updatePriceTooltips);
          document.getElementById("increaseAdults").addEventListener("click", updatePriceTooltips);
          document.getElementById("decreaseChildren").addEventListener("click", updatePriceTooltips);
          document.getElementById("increaseChildren").addEventListener("click", updatePriceTooltips);
          document.getElementById("decreaseInfants").addEventListener("click", updatePriceTooltips);
          document.getElementById("increaseInfants").addEventListener("click", updatePriceTooltips);
        });

        function updatePriceTooltips() {
          const adults = parseInt(document.getElementById("adults").textContent) || 0;
          const children = parseInt(document.getElementById("children").textContent) || 0;
          const infants = parseInt(document.getElementById("infants").textContent) || 0;
          
          document.querySelectorAll('.price-calc-btn').forEach(button => {
            const adultFare = parseFloat(button.dataset.adultFare);
            const infantFare = parseFloat(button.dataset.infantFare);
            
            // Calculate total price
            const adultTotal = adults * adultFare;
            const childTotal = children * adultFare;
            const infantTotal = infants * infantFare;
            const totalPrice = adultTotal + childTotal + infantTotal;
            
            // Create detailed tooltip content
            const tooltipContent = `₹${totalPrice} Total` + "<br>" +
              `Adults (${adults}): ₹${adultFare} × ${adults} = ₹${adultTotal}` + "<br>" +
              `Children (${children}): ₹${adultFare} × ${children} = ₹${childTotal}` + "<br>" +
              `Infants (${infants}): ₹${infantFare} × ${infants} = ₹${infantTotal}`;
            
            // Update the title attribute
            button.setAttribute('title', tooltipContent);
            
            // Reinitialize tooltip for this button
            const tooltipInstance = bootstrap.Tooltip.getInstance(button);
            if (tooltipInstance) {
              tooltipInstance.dispose();
            }
            new bootstrap.Tooltip(button, {
              placement: 'top',
              html: true
            });
          });
        }

        async function bookNow(id) {
          console.log("Booking flight with ID:", id);

          const requestDetails = {
            adults: "<%= requestDetails.adults %>",
            children: "<%= requestDetails.children %>",
            infants: "<%= requestDetails.infants %>",
          };

          try {
            const response = await fetch("/seller-list", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ id, requestDetails }),
            });

if (!response.ok) {
  Swal.fire({
    icon: 'error',
    title: 'Fetch Failed',
    text: 'Failed to fetch flight details',
    confirmButtonText: 'OK'
  });
  return;
}

            // Extract redirect URL and navigate
            const data = await response.json();
            window.location.href = data.redirectUrl;
          } catch (error) {
            console.error("Error booking flight:", error);
          }
        }

      </script>

      <!-- Flight detail modal START -->
      <div class="modal fade" id="flightdetail" aria-hidden="true">
        <div class="modal-dialog modal-lg">
          <div class="modal-content">
            <!-- Title -->
            <div class="modal-header">
              <h5 class="modal-title">Flight Details</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <!-- Body -->
            <div class="modal-body p-3">
              <!-- Tabs START -->
              <ul class="nav nav-pills nav-justified nav-responsive bg-primary bg-opacity-10 rounded p-2 mb-3"
                id="flight-pills-tab" role="tablist">
                <!-- Tab item -->
                <li class="nav-item" role="presentation">
                  <button class="nav-link active mb-0" id="flight-info" data-bs-toggle="pill"
                    data-bs-target="#flight-info-tab" type="button" role="tab" aria-controls="flight-info-tab"
                    aria-selected="true">Flight Information</button>
                </li>
                <!-- Tab item -->
                <li class="nav-item" role="presentation">
                  <button class="nav-link mb-0" id="flight-fare" data-bs-toggle="pill" data-bs-target="#flight-fare-tab"
                    type="button" role="tab" aria-controls="flight-fare-tab" aria-selected="false">Fare Detail</button>
                </li>
                <!-- Tab item -->
                <li class="nav-item" role="presentation">
                  <button class="nav-link mb-0" id="flight-baggage" data-bs-toggle="pill"
                    data-bs-target="#flight-baggage-tab" type="button" role="tab" aria-controls="flight-baggage-tab"
                    aria-selected="false">Baggage Rules</button>
                </li>
                <!-- Tab item -->
                <li class="nav-item" role="presentation">
                  <button class="nav-link mb-0" id="flight-policy" data-bs-toggle="pill"
                    data-bs-target="#flight-policy-tab" type="button" role="tab" aria-controls="flight-policy-tab"
                    aria-selected="false">Cancellation Rules</button>
                </li>
              </ul>
              <!-- Tabs END -->

              <!-- Tab content START -->
              <div class="tab-content mb-0" id="flight-pills-tabContent">

                <!-- Content item START -->
                <div class="tab-pane fade show active" id="flight-info-tab" role="tabpanel"
                  aria-labelledby="flight-info">
                  <div class="card border">

                    <!-- Card header -->
                    <div class="card-header">
                      <div class="d-sm-flex justify-content-sm-between align-items-center">
                        <!-- Airline Name -->
                        <div class="d-flex mb-2 mb-sm-0">
                          <img src="assets/images/element/09.svg" class="w-40px me-2" alt="">
                          <h6 class="fw-normal mb-0">Phillippines Airline (PA - 5620)</h6>
                        </div>
                      </div>
                    </div>

                    <!-- Card body START -->
                    <div class="card-body p-4">
                      <!-- Ticket item START -->
                      <div class="row g-4">
                        <!-- Airport detail -->
                        <div class="col-sm-4">
                          <!-- Title -->
                          <h4>BOM</h4>
                          <h6 class="mb-0">14:50</h6>
                          <p class="mb-0">Chhatrapati Shivaji International Airport</p>
                        </div>

                        <!-- Time -->
                        <div class="col-sm-4 my-sm-auto text-center">
                          <!-- Time -->
                          <h5>9hr 50min</h5>

                          <div class="position-relative my-4">
                            <!-- Line -->
                            <hr class="bg-primary opacity-5 position-relative">
                            <!-- Icon -->
                            <div
                              class="icon-md bg-primary text-white rounded-circle position-absolute top-50 start-50 translate-middle">
                              <i class="fa-solid fa-fw fa-plane rtl-flip"></i>
                            </div>
                          </div>
                        </div>

                        <!-- Airport detail -->
                        <div class="col-sm-4">
                          <!-- Title -->
                          <h4>CDG</h4>
                          <h6 class="mb-0">11:50</h6>
                          <p class="mb-0">Ch. De Gaulle, Paris, France</p>
                        </div>
                      </div>
                      <!-- Ticket item END -->

                      <!-- Divider -->
                      <div class="bg-light text-center fw-normal rounded-2 mt-3 mb-4 p-2">
                        Change of planes: 3h 15m Layover in France
                      </div>

                      <!-- Ticket item START -->
                      <div class="row g-4">
                        <!-- Airport detail -->
                        <div class="col-sm-4">
                          <!-- Title -->
                          <h4>CDG</h4>
                          <h6 class="mb-0">2:50</h6>
                          <p class="mb-0">Ch. De Gaulle, Paris, France</p>
                        </div>

                        <!-- Time -->
                        <div class="col-sm-4 my-sm-auto text-center">
                          <!-- Time -->
                          <h5>5hr 50min</h5>

                          <div class="position-relative my-4">
                            <!-- Line -->
                            <hr class="bg-primary opacity-5 position-relative">
                            <!-- Icon -->
                            <div
                              class="icon-md bg-primary text-white rounded-circle position-absolute top-50 start-50 translate-middle">
                              <i class="fa-solid fa-fw fa-plane rtl-flip"></i>
                            </div>
                          </div>
                        </div>

                        <!-- Airport detail -->
                        <div class="col-sm-4">
                          <!-- Title -->
                          <h4>JFK</h4>
                          <h6 class="mb-0">7:35</h6>
                          <p class="mb-0">John F Kennedy Intl-NY</p>
                        </div>
                      </div>
                      <!-- Ticket item END -->
                    </div>
                    <!-- Card body END -->
                  </div>
                </div>
                <!-- Content item END -->

                <!-- Content item START -->
                <div class="tab-pane fade" id="flight-fare-tab" role="tabpanel" aria-labelledby="flight-fare">
                  <div class="card card-body">

                    <!-- Table START -->
                    <div class="table-responsive-lg">
                      <table class="table caption-bottom mb-0">
                        <!-- Caption -->
                        <caption class="pb-0">*From The Date Of Departure</caption>
                        <!-- Table head -->
                        <thead class="table-dark">
                          <tr>
                            <th scope="col" class="border-0 rounded-start">Base Fare</th>
                            <th scope="col" class="border-0">Taxes and Fees</th>
                            <th scope="col" class="border-0 rounded-end">Total Fees</th>
                          </tr>
                        </thead>
                        <!-- Table body -->
                        <tbody>
                          <tr>
                            <td>$36,500</td>
                            <td>$1,050</td>
                            <td>
                              <h5 class="mb-0">$37,550</h5>
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </div>
                    <!-- Table END -->
                  </div>
                </div>
                <!-- Content item END -->

                <!-- Content item START -->
                <div class="tab-pane fade" id="flight-baggage-tab" role="tabpanel" aria-labelledby="flight-baggage">
                  <div class="card border">
                    <!-- Card header -->
                    <div class="card-header d-flex align-items-center border-bottom">
                      <!-- Title -->
                      <img src="assets/images/element/09.svg" class="h-20px me-1" alt="">
                      <h5 class="card-title mb-0">BOM - CDG</h5>
                    </div>

                    <!-- Card body -->
                    <div class="card-body">
                      <!-- Table START -->
                      <div class="table-responsive-lg">
                        <table class="table caption-bottom mb-0">
                          <!-- Caption -->
                          <caption class="pb-0">*1PC = 23KG</caption>
                          <!-- Table head -->
                          <thead class="table-dark">
                            <tr>
                              <th scope="col" class="border-0 rounded-start">Baggage Type</th>
                              <th scope="col" class="border-0">Check In</th>
                              <th scope="col" class="border-0 rounded-end">Cabin</th>
                            </tr>
                          </thead>
                          <!-- Table body -->
                          <tbody class="border-top-0">
                            <tr>
                              <td>Adult</td>
                              <td>2 PC</td>
                              <td>7 Kg</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                      <!-- Table END -->
                    </div>
                  </div>
                </div>
                <!-- Content item END -->

                <!-- Content item START -->
                <div class="tab-pane fade" id="flight-policy-tab" role="tabpanel" aria-labelledby="flight-policy">
                  <div class="card border">
                    <!-- Card header -->
                    <div class="card-header d-flex align-items-center border-bottom">
                      <!-- Title -->
                      <img src="assets/images/element/09.svg" class="h-20px me-1" alt="">
                      <h5 class="card-title mb-0">BOM - CDG</h5>
                    </div>

                    <!-- Card body -->
                    <div class="card-body">
                      <!-- Table START -->
                      <div class="table-responsive-lg">
                        <table class="table caption-bottom mb-0">
                          <!-- Caption -->
                          <caption class="pb-0">*From The Date Of Departure</caption>
                          <!-- Table head -->
                          <thead class="table-dark">
                            <tr>
                              <th scope="col" class="border-0 rounded-start">Time Frame</th>
                              <th scope="col" class="border-0 rounded-end">Air Free + MMT Free</th>
                            </tr>
                          </thead>
                          <!-- Table body -->
                          <tbody class="border-top-0">
                            <tr>
                              <td>0 hours to 24 hours</td>
                              <td>Non Refundable</td>
                            </tr>
                            <tr>
                              <td>24 hours to 365 days</td>
                              <td>$16,325 + $250</td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                      <!-- Table END -->
                    </div>
                  </div>
                </div>
                <!-- Content item END -->

              </div>
              <!-- Tab content END -->
            </div>
          </div>
        </div>
      </div>
      <!-- Flight detail modal END -->

      <script>
        document.addEventListener('DOMContentLoaded', function () {
          const flightDetailButtons = document.querySelectorAll('.flight-detail-btn');

          flightDetailButtons.forEach(button => {
            button.addEventListener('click', function () {
              const flightData = JSON.parse(this.getAttribute('data-flight'));
              const userData = JSON.parse(this.getAttribute('data-user'));
              
              const stops = flightData.stops || [];

              // ========= Flight Info Tab =========
              const flightInfoTab = document.getElementById('flight-info-tab');

              // Clear previous content
              flightInfoTab.innerHTML = '';

              // Create card wrapper
              const card = document.createElement('div');
              card.className = 'card border';

              // Card header
              const cardHeader = document.createElement('div');
              cardHeader.className = 'card-header';

              const headerFlex = document.createElement('div');
              headerFlex.className = 'd-sm-flex justify-content-sm-between align-items-center';

              const airlineDiv = document.createElement('div');
              airlineDiv.className = 'd-flex mb-2 mb-sm-0';

              const airlineImg = document.createElement('img');
              airlineImg.src = stops[0]?.airlineLogo || 'assets/images/element/09.svg';
              airlineImg.className = 'w-40px me-2';
              airlineImg.alt = '';

              const airlineText = document.createElement('h6');
              airlineText.className = 'fw-normal mb-0';
              airlineText.textContent = `${stops[0]?.airline || 'Airline'} (${stops[0]?.airlineCode} - ${stops[0]?.flightNumber})`;

              airlineDiv.appendChild(airlineImg);
              airlineDiv.appendChild(airlineText);

              const travelClass = document.createElement('h6');
              travelClass.className = 'fw-normal mb-0';

              headerFlex.appendChild(airlineDiv);
              headerFlex.appendChild(travelClass);
              cardHeader.appendChild(headerFlex);
              card.appendChild(cardHeader);

              // Card body
              const cardBody = document.createElement('div');
              cardBody.className = 'card-body p-4';

              // Loop through stops and render each segment
              for (let i = 0; i < stops.length; i++) {
                const stop = stops[i];
                const nextStop = stops[i + 1];

                const row = document.createElement('div');
                row.className = 'row g-4';

                // From Airport
                const fromCol = document.createElement('div');
                fromCol.className = 'col-sm-4';
                fromCol.innerHTML = `
                <h4>${stop.fromCode.toUpperCase()}</h4>
                <h6 class="mb-0">${stop.departureTime}</h6>
                <p class="mb-0">${stop.departureCity}, ${stop.from}</p>
                `;
                // Flight Duration
                const midCol = document.createElement('div');
                midCol.className = 'col-sm-4 my-sm-auto text-center';
                midCol.innerHTML = `
                <h5>stop.stopDuration</h5>
                <div class="position-relative my-4">
                <hr class="bg-primary opacity-5 position-relative">
                <div class="icon-md bg-primary text-white rounded-circle position-absolute top-50 start-50 translate-middle">
                  <i class="fa-solid fa-fw fa-plane rtl-flip"></i>
                </div>
                </div>
                `;

                // To Airport
                const toCol = document.createElement('div');
                toCol.className = 'col-sm-4';
                toCol.innerHTML = `
                <h4>${stop.toCode.toUpperCase()}</h4>
                <h6 class="mb-0">${stop.arrivalTime}</h6>
                <p class="mb-0">${stop.arrivalCity}, ${stop.to}</p>
                `;

                row.appendChild(fromCol);
                row.appendChild(midCol);
                row.appendChild(toCol);

                cardBody.appendChild(row);

                // Add Layover if not last stop
                
                if (nextStop) {
                  // Parse arrival time of current stop and departure time of next stop
                  const arrivalTime = stop.arrivalTime; // e.g., "17:25"
                  const nextDepartureTime = nextStop.departureTime; // e.g., "18:40"

                  // Convert both to minutes
                  const [arrHr, arrMin] = arrivalTime.split(':').map(Number);
                  const [depHr, depMin] = nextDepartureTime.split(':').map(Number);

                  const arrivalInMinutes = arrHr * 60 + arrMin;
                  const departureInMinutes = depHr * 60 + depMin;

                  let layoverMin = departureInMinutes - arrivalInMinutes;

                  // Handle overnight flights (e.g., arrival at 23:30, departure at 01:15 next day)
                  if (layoverMin < 0) layoverMin += 24 * 60;

                  // Convert to hrs and mins
                  const layoverHr = Math.floor(layoverMin / 60);
                  const layoverMins = layoverMin % 60;

                  // Create layover text
                  let layoverText = 'Layover: ';
                  if (layoverHr > 0) layoverText += `${layoverHr} hr `;
                  if (layoverMins > 0 || layoverHr === 0) layoverText += `${layoverMins} min `;
                  layoverText += `in ${stop.arrivalCity}`;

                  const layoverDiv = document.createElement('div');
                  layoverDiv.className = 'bg-light text-center fw-normal rounded-2 mt-3 mb-4 p-2 text-danger';
                  layoverDiv.textContent = layoverText;

                  cardBody.appendChild(layoverDiv);
                }

              }

              card.appendChild(cardBody);
              flightInfoTab.appendChild(card);

// ========= Baggage Tab =========
const baggageTab = document.getElementById('flight-baggage-tab');
        baggageTab.innerHTML = ''; // Clear previous

        const baggage = flightData.baggage || {};
        const baggageCard = document.createElement('div');
        baggageCard.className = 'card border';

        const baggageHeader = document.createElement('div');
        baggageHeader.className = 'card-header d-flex align-items-center border-bottom';
        baggageHeader.innerHTML = `
          <img src="assets/images/element/09.svg" class="h-20px me-1" alt="">
          <h5 class="card-title mb-0">${stops[0]?.fromCode.toUpperCase()} - ${stops[stops.length - 1]?.toCode.toUpperCase()}</h5>
        `;
        baggageCard.appendChild(baggageHeader);

        const baggageBody = document.createElement('div');
        baggageBody.className = 'card-body';
        baggageBody.innerHTML = `
          <div class="table-responsive-lg">
            <table class="table caption-bottom mb-0">
              <caption class="pb-0">*1PC = 30KG</caption>
              <thead class="table-dark">
                <tr>
                  <th scope="col" class="border-0 rounded-start">Baggage Type</th>
                  <th scope="col" class="border-0">Check In</th>
                  <th scope="col" class="border-0 rounded-end">Cabin</th>
                </tr>
              </thead>
              <tbody class="border-top-0">
                ${baggage.adult ? `
                  <tr>
                    <td>Adult</td>
                    <td>${baggage.adult.checkIn.numberOfPieces} PC </td>
                    <td>${baggage.adult.cabin.weightPerPiece} Kg</td>
                  </tr>` : ''
                }
                ${baggage.child ? `
                  <tr>
                    <td>Child</td>
                    <td>${baggage.child.checkIn.numberOfPieces} PC</td>
                    <td>${baggage.child.cabin.weightPerPiece} Kg</td>
                  </tr>` : ''
                }
                ${baggage.infant ? `
                  <tr>
                    <td>Infant</td>
                    <td>${baggage.infant.checkIn.numberOfPieces} PC </td>
                    <td>${baggage.infant.cabin.weightPerPiece} Kg</td>
                  </tr>` : ''
                }
              </tbody>
            </table>
          </div>
        `;
        baggageCard.appendChild(baggageBody);
        baggageTab.appendChild(baggageCard);

// fare
        const fare = flightData.inventoryDates?.[0]?.fare?.adults || 0;
        
        let serviceCharge = 400; // default

if (userData?.subscription?.serviceCharge) {
  serviceCharge = userData.subscription.serviceCharge;
}
        const taxPercent = (serviceCharge * 18)/100
        const taxAndFees = serviceCharge + taxPercent;
        const totalFees = fare + taxAndFees;

        // Fill the fare table
        document.querySelector("#flight-fare-tab tbody").innerHTML = `
          <tr>
            <td>₹${fare}</td>
            <td>₹${taxAndFees.toFixed(2)}</td>
            <td><h5 class="mb-0">₹${totalFees.toFixed(2)}</h5></td>
          </tr>
        `;

            });
          });
        });
      </script>

      <script>
        document.addEventListener("DOMContentLoaded", function () {
          const modal = document.getElementById("flightdetail");

          modal.addEventListener("hidden.bs.modal", function () {
            // Remove any extra modal-backdrop elements that might be lingering
            document.querySelectorAll(".modal-backdrop").forEach((backdrop) => backdrop.remove());

            // Also ensure the body class is removed to prevent background overlay issues
            document.body.classList.remove("modal-open");
          });

          modal.addEventListener("shown.bs.modal", function () {
            // If there are multiple backdrops, remove extras
            const backdrops = document.querySelectorAll(".modal-backdrop");
            if (backdrops.length > 1) {
              backdrops[0].remove(); // Remove the first extra backdrop
            }
          });
        });

      </script>
<!-- 
      <script>
        document.addEventListener("DOMContentLoaded", async function () {
          const staticSelectors = [
            "#fixedFrom",
            // "#fixedTo",
            "#from",
            // "#to"
          ];
      
          const doneTypingInterval = 100;
      
          let airportList = [];
      
          // ✅ 1. Fetch all airports once on page load
          try {
            const res = await fetch("/search-filtered-airports");
            airportList = await res.json();
          } catch (err) {
            console.error("Error preloading airports:", err);
          }
      
          function initChoicesForElement(element) {
            if (!element || element.classList.contains('choices-initialized')) return;
            element.classList.add('choices-initialized');
      
            const selectedValue = element.getAttribute('data-selected');
      
            const choices = new Choices(element, {
              searchEnabled: true,
              placeholderValue: "Select Airport",
              searchChoices: false,
              shouldSort: false,
              allowHTML: true,
              itemSelectText: ''
            });
      
            element._choicesInstance = choices;
      
            // ✅ 2. Set initial choices with selected one marked
            choices.setChoices(
              airportList.map(a => ({
                value: a.value,
                label: `${a.city} (${a.value})`,
                selected: a.value === selectedValue
              })),
              "value",
              "label",
              true
            );
      
            // ✅ 3. Search on user input
            let typingTimer;
            element.addEventListener('search', function (e) {
              clearTimeout(typingTimer);
              const searchTerm = e.detail.value.trim();
      
              if (searchTerm.length >= 2) {
                typingTimer = setTimeout(async () => {
                  try {
                    const res = await fetch(`/search-filtered-airports?q=${encodeURIComponent(searchTerm)}`);
                    const airports = await res.json();
      
                    choices.setChoices(
                      airports.map(a => ({
                        value: a.value,
                        label: `${a.airport} (${a.value})`,
                        selected: a.value === selectedValue
                      })),
                      "value",
                      "label",
                      true
                    );
                  } catch (err) {
                    console.error("Error searching airports:", err);
                  }
                }, doneTypingInterval);
              }
            });
          }
      
          // ✅ Initialize all select fields
          staticSelectors.forEach(selector => {
            const element = document.querySelector(selector);
            if (element) initChoicesForElement(element);
          });
        });
      </script>
      
            <script>
  document.addEventListener("DOMContentLoaded", function () {
    const fromSelectors = ["#fixedFrom", "#from"];
    const toSelectors = ["#fixedTo", "#to"];

    fromSelectors.forEach((fromSelector, index) => {
      const fromElement = document.querySelector(fromSelector);
      const toElement = document.querySelector(toSelectors[index]);

      if (!fromElement || !toElement) return;

      fromElement.addEventListener("change", async () => {
        const fromValue = fromElement.value;
        if (!fromValue) return;

        try {
          const res = await fetch(`/get-to-airports?from=${fromValue}`);
          const toAirports = await res.json();

          // Destroy Choices instance if already initialized
          if (toElement._choicesInstance) {
            toElement._choicesInstance.destroy();
            toElement.classList.remove("choices-initialized");
          }

          // Clear and repopulate the "To" dropdown
          toElement.innerHTML = '<option value="">Select location</option>';
          toAirports.forEach(a => {
            const option = document.createElement("option");
            option.value = a.value;
            option.text = `${a.city} (${a.value})`;
            toElement.appendChild(option);
          });

          // Re-initialize Choices.js
          const choices = new Choices(toElement, {
            searchEnabled: true,
            shouldSort: false,
            allowHTML: true,
            placeholderValue: "Select Airport",
          });
          toElement._choicesInstance = choices;

        } catch (error) {
          console.error("Error fetching to airports:", error);
        }
      });
    });
  });
</script> -->

<script>
  document.addEventListener("DOMContentLoaded", async function () {
    const fromSelectors = ["#fixedFrom", "#from"];
    const toSelectors = ["#fixedTo", "#to"];

    // 🔁 Fetch all fromAirports for dropdown
    let fromAirports = [];
    try {
      const res = await fetch("/search-filtered-airports");
      fromAirports = await res.json();
    } catch (err) {
      console.error("Error loading fromAirports:", err);
    }

    // 🔁 Initialize FROM dropdowns
    fromSelectors.forEach((fromSelector, index) => {
      const fromElement = document.querySelector(fromSelector);
      const toElement = document.querySelector(toSelectors[index]);

      if (!fromElement || !toElement) return;

      const selectedFrom = fromElement.getAttribute("data-selected");
      const selectedTo = toElement.getAttribute("data-selected");

      // 🛠️ Initialize FROM dropdown with Choices
      const fromChoices = new Choices(fromElement, {
        searchEnabled: true,
        placeholderValue: "Select Airport",
        shouldSort: false,
        allowHTML: true,
        itemSelectText: ''
      });

      fromElement._choicesInstance = fromChoices;

      // Load options
      fromChoices.setChoices(
        fromAirports.map(a => ({
          value: a.value,
          label: `${a.city} (${a.value})`,
          selected: a.value === selectedFrom
        })),
        "value",
        "label",
        true
      );

      // 🔁 Function to load TO airports based on selected FROM
      async function loadToAirports(fromValue, preselectTo = null) {
        try {
          const res = await fetch(`/get-to-airports?from=${fromValue}`);
          const toAirports = await res.json();

          // Destroy old instance
          if (toElement._choicesInstance) {
            toElement._choicesInstance.destroy();
            toElement.classList.remove("choices-initialized");
          }

          // Clear options
          toElement.innerHTML = '<option value="">Select location</option>';

          // Add new options
          toAirports.forEach((a) => {
            const option = document.createElement("option");
            option.value = a.value;
            option.text = `${a.city} (${a.value})`;
            if (a.value === preselectTo) option.selected = true;
            toElement.appendChild(option);
          });

          // Reinitialize Choices for TO dropdown
          const toChoices = new Choices(toElement, {
            searchEnabled: true,
            shouldSort: false,
            allowHTML: true,
            placeholderValue: "Select Airport"
          });

          toElement._choicesInstance = toChoices;

        } catch (err) {
          console.error("Error loading toAirports:", err);
        }
      }

      // 🔁 On page load: populate TO if FROM is preselected
      if (selectedFrom) {
        loadToAirports(selectedFrom, selectedTo);
      }

      // 🔁 On FROM change: update TO
      fromElement.addEventListener("change", () => {
        const fromValue = fromElement.value;
        if (!fromValue) return;
        loadToAirports(fromValue);
      });
    });
  });
</script>

      <script>
        window.history.replaceState(null, "", window.location.href)
      </script>

      <!-- =======================
    Flight list END -->
    </main>
    <!-- **************** MAIN CONTENT END **************** -->

    <%- include('./partials/footer') %>