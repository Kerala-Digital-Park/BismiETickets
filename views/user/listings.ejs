<%- include('./partials/header') %>
	<%- include('./partials/userHeader') %>

		<!-- **************** MAIN CONTENT START **************** -->
		<main>
			<%- include('./partials/agentTopBar') %>

				<!-- =======================
    Content START -->
				<section class="pt-0">
					<div class="container vstack gap-4">

						<!-- Counter START -->
						<div class="row g-4">

							<!-- Earning item -->
							<div class="col-md-6 col-xl-4">
								<div class="card card-body border p-4 h-100">
									<h6>
										<%= currentMonth %> Total Seats
											<!-- <a tabindex="0" class="h6 mb-0" role="button" data-bs-toggle="popover" data-bs-trigger="focus" data-bs-placement="top" data-bs-content="After US royalty withholding tax" data-bs-original-title="" title="">
					<i class="bi bi-info-circle-fill small"></i>
				</a> -->
									</h6>
									<h2 class="text-success">
										<%= totalSeats %>
									</h2>
									<!-- <p class="mb-2"><span class="text-danger me-1">102</span>May Total Bookings</p>
			<div class="mt-auto text-primary-hover"><a href="#" class="text-decoration-underline p-0 mb-0">View statement</a></div> -->
								</div>
							</div>

							<!-- Booked Rooms item -->
							<div class="col-md-6 col-xl-4">
								<div class="card card-body border p-4 h-100">
									<h6>
										<%= currentMonth %> Sold out Seats
									</h6>
									<h2 class="text-info">
										<%= totalSeatsBooked %>
									</h2>
									<!-- <p class="mb-2"><span class="text-danger me-1">102</span>Sold out Seats</p>
			<div class="mt-auto text-primary-hover"><a href="#" class="text-decoration-underline p-0 mb-0">View Bookings</a></div> -->
								</div>
							</div>

							<!-- Available Rooms item -->
							<div class="col-md-6 col-xl-4">
								<div class="card card-body border p-4 h-100">
									<h6>
										<%= currentMonth %> Pending Seats
									</h6>
									<h2 class="text-warning">
										<%= totalPendingSeats %>
									</h2>
									<!-- <p class="mb-2"><span class="text-danger me-1">27</span>Pending Seats</p>
			<div class="mt-auto text-primary-hover"><a href="#" class="text-decoration-underline p-0 mb-0">View Bookings</a></div> -->
								</div>
							</div>

						</div>
						<!-- Counter END -->
						<div class="card border">
							<!-- Card header -->
							<div class="card-header border-bottom d-flex justify-content-between align-items-center">
								<h4 class="card-header-title">My Listings
									<!-- <span class="badge bg-primary bg-opacity-10 text-primary ms-2">5 Items</span> -->
								</h4>
								<div class="d-grid"><a href="/add-listing" class="btn btn-primary-soft mb-0"><i
											class="bi bi-plus-lg fa-fw"></i> New Listing</a></div>
							</div>

							<!-- Card body START -->
							<div class="card-body">
								<div class="table-responsive border-0">
									<table class="table align-middle p-4 mb-0 table-hover table-shrink">
										<!-- Table head -->
										<thead class="table-light">
											<tr>
												<th scope="col" class="border-0">Inventory Name</th>
												<th scope="col" class="border-0">Travel Date</th>
												<th scope="col" class="border-0">Sector</th>
												<th scope="col" class="border-0">Flight Number</th>
												<th scope="col" class="border-0">Total Live Seats</th>
												<th scope="col" class="border-0">Total Sold Seats</th>
												<th scope="col" class="border-0">Disable Before <div>Departure</div>
												</th>
												<th scope="col" class="border-0">Status</th>
												<th scope="col" class="border-0 rounded-end"></th>
											</tr>
										</thead>

										<!-- Table body START -->
										<tbody class="border-top-0">
											<% if (flights.length===0) { %>
												<tr>
													<td colspan="9" class="text-center">No inventories found.
													</td>
												</tr>
												<% } else { %>
													<% flights.forEach((flight, index)=> { %>
														<tr class="align-middle border-top">
															<td>
																<div>
																	<strong class="text-primary">
																		<%= flight.inventoryId %>
																	</strong>
																</div>
																<div class="text-muted">
																	Create Date
																</div>
																<div>
																	<strong>
																		<%= new
																			Date(flight.createdAt).toLocaleDateString('en-GB',
																			{ day: '2-digit' , month: 'short' ,
																			year: 'numeric' }) %>
																	</strong>
																</div>
															</td>
															<td>
																<div>
																	<strong>
																		<%= new
																			Date(flight.departureDate).toLocaleDateString('en-GB')
																			%>
																	</strong>
																</div>
																<div class="text-muted">
																	Departure and Arrival Time
																</div>
																<div>
																	<strong>
																		<%= flight.departureTime %> - <%=
																				flight.arrivalTime %>
																	</strong>
																</div>

															</td>
															<td>
																<div class="text-muted">
																	One Way
																</div>
																<div>
																	<strong>
																		<%= flight.from %> - <%= flight.to %>
																	</strong>
																</div>

															</td>
															<td>
																<strong data-bs-toggle="modal"
																	data-bs-target="#flightdetail"
																	class="flight-detail-btn text-primary"
																	data-flight='<%= JSON.stringify(flight) %>'
																	style="cursor: pointer;">
																	<%= flight.stops[0].airlineCode %> - <%=
																			flight.stops[0].flightNumber %>
																</strong>
															</td>
															<td>
																<strong>
																	<%= flight.inventoryDates[0].seats %>
																</strong>
															</td>
															<td>
																<strong>
																	<%= flight.inventoryDates[0].seatsBooked %>
																</strong>
															</td>
															<td>
																<strong>
																	<%= flight.disableBeforeDays %>
																		<%= flight.disableBeforeDays==1 ? "Day" : "Days"
																			%>
																</strong>
															</td>

															<td>
																<div
																	style="display: flex; align-items: center; gap: 8px; flex-direction: column;">
																	<span class="status-label"
																		style="font-size: small;">
																		<%= flight.status==='active' ? 'Active'
																			: 'Inactive' %>
																	</span>
																	<label class="custom-switch">
																		<input type="checkbox"
																			class="changeStatusToggle"
																			<%=flight.status==='active' ? 'checked' : ''
																			%>
																		data-id="<%= flight._id %>"
																			data-status="<%= flight.status==='active'
																				? 'inactive' : 'active' %>">
																				<span class="slider"></span>
																	</label>
																</div>
															</td>

															<td>
																<div class="d-flex g-2">
																	<!-- Edit Seats Button -->
																	<a href="#" class="btn btn-sm btn-light"
																		data-bs-toggle="modal"
																		data-bs-target="#seatModal"
																		data-flight="<%= JSON.stringify(flight) %>"
																		data-bs-placement="top" title="Edit Seats">
																		<i class="fa-solid fa-chair"></i>
																	</a>

																	<!-- Edit Days Button -->
																	<a href="#" class="btn btn-sm btn-light"
																		data-bs-toggle="modal"
																		data-bs-target="#dateModal"
																		data-flight="<%= JSON.stringify(flight) %>"
																		data-bs-placement="top" title="Edit Days">
																		<i class="fa-solid fa-calendar-days"></i>
																	</a>																	

																</div>
																<div class="d-flex g-2">
																	<a href="#"
																		class="btn btn-sm btn-light user-booking-btn"
																		data-flight-id="<%= flight._id %>"
																		title="User Bookings">
																		<i class="bi bi-eye-fill"></i>
																	</a>
																	<a href="#"
																		class="btn btn-sm btn-light transaction-btn"
																		data-flight-id="<%= flight._id %>"
																		title="Transactions">
																		<i class="fa-solid fa-wallet "></i>
																	</a>
																</div>
															</td>


														</tr>
														<% }); %>
															<% } %>
										</tbody>

										<!-- Table body END -->
									</table>
								</div>
							</div>
							<!-- Card body END -->

							<!-- Card footer START -->

							<!-- Card footer END -->

						</div>
						<!-- </div> -->
					</div>
					<!-- Listing table END -->
					</div>
				</section>
				<!-- =======================
    Content END -->

				<div class="modal fade" id="flightModal" tabindex="-1" aria-labelledby="flightModalLabel"
					aria-hidden="true">
					<div class="modal-dialog modal-lg">
						<div class="modal-content">
							<div class="modal-header">
								<h5 class="modal-title" id="flightModalLabel">Update Flight</h5>
								<button type="button" class="btn-close" data-bs-dismiss="modal"
									aria-label="Close"></button>
							</div>

							<div class="modal-body">
								<form id="flightForm">
									<input type="hidden" name="flightId" id="flightId">
									<div class="row g-3">
										<!-- Row 1 -->
										<div class="col-md-3">
											<label class="form-label">Inventory ID</label>
											<input type="text" class="form-control" id="inventoryId">
										</div>

										<div class="col-md-4">
											<label class="form-label">From</label>
											<input type="text" class="form-control" id="from">
										</div>

										<div class="col-md-4">
											<label class="form-label">To</label>
											<input type="text" class="form-control" id="to">
										</div>

										<div class="col-md-3">
											<label class="form-label">From Code</label>
											<input type="text" class="form-control" id="fromCode">
										</div>

										<div class="col-md-3">
											<label class="form-label">To Code</label>
											<input type="text" class="form-control" id="toCode">
										</div>

										<div class="col-md-3">
											<label class="form-label">Departure Date</label>
											<input type="text" class="form-control dateInput" id="departureDate">
										</div>

										<div class="col-md-3">
											<label class="form-label">Arrival Date</label>
											<input type="text" class="form-control dateInput" id="arrivalDate">
										</div>

										<div class="col-md-3">
											<label class="form-label">Departure Time</label>
											<input type="time" class="form-control" id="departureTime">
										</div>

										<div class="col-md-3">
											<label class="form-label">Arrival Time</label>
											<input type="time" class="form-control" id="arrivalTime">
										</div>

										<div class="col-md-3">
											<label class="form-label">Duration(in sec)</label>
											<input type="text" class="form-control" id="duration">
										</div>

										<div class="col-md-3">
											<label class="form-label">From City</label>
											<input type="text" class="form-control" id="fromCity">
										</div>

										<div class="col-md-3">
											<label class="form-label">To City</label>
											<input type="text" class="form-control" id="toCity">
										</div>

										<div class="col-md-3">
											<label class="form-label">From Country</label>
											<input type="text" class="form-control" id="fromCountry">
										</div>

										<div class="col-md-3">
											<label class="form-label">To Country</label>
											<input type="text" class="form-control" id="toCountry">
										</div>

										<!-- Row 2 -->

										<div id="stopsContainer" class="row g-3 stop-block"></div>

										<!-- Row 3 -->
										<div class="col-md-3">
											<label class="form-label">PNR</label>
											<input type="text" class="form-control" id="pnr">
										</div>

										<div class="col-md-3">
											<label class="form-label">Seats</label>
											<input type="number" class="form-control" id="seats">
										</div>

										<div class="col-md-3">
											<label class="form-label">Adults ₹</label>
											<input type="number" class="form-control" id="adults">
										</div>

										<div class="col-md-3">
											<label class="form-label">Infants ₹</label>
											<input type="number" class="form-control" id="infants">
										</div>

										<div class="col-md-3">
											<label class="form-label">Cabin Weight</label>
											<input type="text" class="form-control" id="cab">
										</div>

										<div class="col-md-3">
											<label class="form-label">CheckIn Weight</label>
											<input type="text" class="form-control" id="checkin">
										</div>

										<div class="col-md-3">
											<label class="form-label">Status</label>
											<select class="form-select" id="status">
												<option value="active">Active</option>
												<option value="inactive">Inactive</option>
											</select>
										</div>

									</div>
								</form>
							</div>

							<div class="modal-footer">
								<button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
								<button type="submit" id="updateFlightBtn" class="btn btn-primary">Update</button>
							</div>
						</div>
					</div>
				</div>

				<div class="modal fade" id="seatModal" tabindex="-1" aria-labelledby="seatModalLabel"
					aria-hidden="true">
					<div class="modal-dialog modal-lg">
						<div class="modal-content">

							<div class="modal-header">
								<h5 class="modal-title" id="seatModalLabel">Update Seats on <span id="seatfrom"></span>
									- <span id="seatto"></span> & PNR: <span id="seatpnr"></span></h5>
								<button type="button" class="btn-close" data-bs-dismiss="modal"
									aria-label="Close"></button>
							</div>

							<div class="modal-body" style="padding: 0;">
								<form id="seatForm">
									<input type="hidden" name="inventoryId" id="inventoryId">
									<div class="table-responsive">
										<table class="table custom-border text-center p-0" style="font-size: 0.9em;">
											<thead class="table-light">
												<tr>
													<th>Travel Date</th>
													<th>Seats Booked</th>
													<th>Total Seats</th>
													<th>Fare Amount Adults(12y+)</th>
													<th>Fare-Infants(Below 2y)</th>
													<th>ACTION</th>
												</tr>
											</thead>
											<tbody class="table-light">
												<tr>
													<td><input type="text"
															class="form-control-plaintext text-center text-dark"
															id="travelDate" disabled></td>
													<td><input type="text"
															class="form-control-plaintext text-center text-dark"
															id="seatsBooked" readonly></td>
													<td><input type="text"
															class="form-control border-0 text-center text-dark"
															id="totalSeats" required
															onkeypress='return event.charCode >= 48 && event.charCode <= 57'>
													</td>
													<td><input type="text"
															class="form-control border-0 text-center text-dark"
															id="fareAdults" required
															onkeypress='return event.charCode >= 48 && event.charCode <= 57'>
													</td>
													<td><input type="text"
															class="form-control border-0 text-center text-dark"
															id="fareInfants" required
															onkeypress='return event.charCode >= 48 && event.charCode <= 57'>
													</td>
													<td><button type="submit" id="updateSeatBtn"
															class="btn text-primary">Save</button></td>
												</tr>
											</tbody>
										</table>
									</div>

								</form>
							</div>

						</div>
					</div>
				</div>

				<div class="modal fade" id="dateModal" tabindex="-1" aria-labelledby="dateModalLabel"
					aria-hidden="true">
					<div class="modal-dialog modal-lg">
						<div class="modal-content">
							<div class="modal-header">
								<h5 class="modal-title" id="dateModalLabel">Schedule Update Details</h5>
								<button type="button" class="btn-close" data-bs-dismiss="modal"
									aria-label="Close"></button>
							</div>

							<div class="modal-body">
								<form id="flightForm">
									<input type="hidden" name="flightId" id="flightId">
									<div class="row g-3">

										<div>
											<h5><span id="displayFromCode"></span> → <span id="displayToCode"></span> -
												<span id="displayDepartureDate"></span>
											</h5>
											<p>Sector: <span id="displayFrom"></span> - <span id="displayTo"></span> •
												<span id="displayAirline"></span> : <span
													id="displayAirlineCode"></span> - <span
													id="displayFlightNumber"></span>
												• Total Seats : <span id="displaySeats"></span> • <span
													class="text-success">Sold Seats : <span
														id="displaySoldSeats"></span></span>
											</p>
											<p>Departure & Arrival Time : <span id="displayDepartureTime"></span> -
												<span id="displayArrivalTime"></span></p>
											<p>Travel Date : <span class="fw-bold" id="displaydepartureDate"></span></p>
										</div>

										<div class="position-relative">
											<hr />
											<h6 class="position-absolute top-50 translate-middle start-0 bg-mode px-2 text-muted"
												style="left: 95px !important;">
												Edit Inventory Details
											</h6>

										</div>
										<!-- Row 1 -->
										<div class="col-md-4">
											<label class="form-label">Airline</label>
											<input type="text" class="form-control" id="inputAirline" disabled>
										</div>

										<div class="col-md-4">
											<label class="form-label">Flight Number</label>
											<input type="text" class="form-control" id="inputFlightNumber" disabled>
										</div>

										<div class="col-md-4">
											<label class="form-label">Travel Date</label>
											<input type="text" class="form-control dateInput" id="inputDepartureDate">
										</div>

										<div class="col-md-4">
											<label class="form-label">Departure Time</label>
											<input type="time" class="form-control" id="inputDepartureTime">
										</div>

										<div class="col-md-4">
											<label class="form-label">Arrival Date</label>
											<input type="text" class="form-control dateInput" id="inputArrivalDate">
										</div>

										<div class="col-md-4">
											<label class="form-label">Arrival Time</label>
											<input type="time" class="form-control" id="inputArrivalTime">
										</div>
									</div>
								</form>
							</div>

							<div class="modal-footer">
								<button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancel</button>
								<button type="submit" id="updateDateBtn" class="btn btn-primary">Save Inventory
									Details</button>
							</div>
						</div>
					</div>
				</div>

				<script>
					const seatModal = document.getElementById('seatModal');

					seatModal.addEventListener('show.bs.modal', async function (event) {
						const button = event.relatedTarget;
						const flightData = JSON.parse(button.getAttribute('data-flight'));
						console.log(flightData);

						const invDate = flightData.inventoryDates?.[0] || {};

						document.getElementById('inventoryId').value = flightData._id || '';
						document.getElementById('travelDate').value = flightData.departureDate || '';
						document.getElementById('seatpnr').textContent = invDate.pnr || '';
						document.getElementById('seatsBooked').value = `${invDate.seatsBooked || 0}/${invDate.seats || 0}`;
						document.getElementById('totalSeats').value = invDate.seats || '';
						document.getElementById('fareAdults').value = invDate.fare?.adults || '';
						document.getElementById('fareInfants').value = invDate.fare?.infants || '';
						document.getElementById('seatfrom').textContent = flightData.from || '';
						document.getElementById('seatto').textContent = flightData.to || '';
					});

				</script>

				<script>
					document.getElementById('updateSeatBtn').addEventListener('click', async function (e) {
						e.preventDefault(); // stop form from submitting normally

						const inventoryId = document.getElementById('inventoryId').value;

						const updatedData = {
							// departureDate: document.getElementById('travelDate').value,
							inventoryDates: [{
								seats: document.getElementById('totalSeats').value,
								fare: {
									adults: document.getElementById('fareAdults').value,
									infants: document.getElementById('fareInfants').value
								}
							}],
							// disableBeforeDeparture: document.getElementById('disableBeforeDeparture').value,
							// status: document.getElementById('status').value
						};

						try {
							const response = await fetch(`/update-seats?id=${inventoryId}`, {
								method: 'PUT',
								headers: {
									'Content-Type': 'application/json'
								},
								body: JSON.stringify(updatedData)
							});

							if (!response.ok) {
								throw new Error('Failed to update flight');
							}

							const result = await response.json();
Swal.fire({
  icon: 'success',
  title: 'Success',
  text: 'Flight updated successfully!',
  confirmButtonText: 'OK'
}).then(() => window.location.reload());

						} catch (error) {
							console.error('Error:', error);
Swal.fire({
  icon: 'error',
  title: 'Update Failed',
  text: 'Error updating flight.',
  confirmButtonText: 'OK'
});
						}
					});

				</script>

				<script>
					const dateModal = document.getElementById('dateModal');

					dateModal.addEventListener('show.bs.modal', function (event) {
						const button = event.relatedTarget;
						const flightData = JSON.parse(button.getAttribute('data-flight'));

						// Fill the header fields
						document.getElementById('flightId').value = flightData._id || '';
						document.getElementById('displayFromCode').textContent = flightData.from || '';
						document.getElementById('displayToCode').textContent = flightData.to || '';
						document.getElementById('displayDepartureDate').textContent = flightData.departureDate || '';
						document.getElementById('displayAirline').textContent = flightData.stops[0]?.airline || '';
						document.getElementById('displayAirlineCode').textContent = flightData.stops[0]?.airlineCode || '';
						document.getElementById('displayFlightNumber').textContent = flightData.stops[0]?.flightNumber || '';
						document.getElementById('displaySeats').textContent = flightData.inventoryDates?.[0]?.seats || '';
						document.getElementById('displayDepartureTime').textContent = flightData.departureTime || '';
						document.getElementById('displayArrivalTime').textContent = flightData.arrivalTime || '';
						document.getElementById('displaydepartureDate').textContent = flightData.departureDate || '';
						document.getElementById('displayFrom').textContent = flightData.from || '';
						document.getElementById('displayTo').textContent = flightData.to || '';
						document.getElementById('displaySoldSeats').textContent = flightData.inventoryDates?.[0]?.seatsBooked || 0;

						// Fill form inputs
						document.getElementById('inputAirline').value = flightData.stops[0]?.airline || '';
						document.getElementById('inputFlightNumber').value = flightData.stops[0]?.flightNumber || '';
						document.getElementById('inputDepartureDate').value = flightData.departureDate || '';
						document.getElementById('inputDepartureTime').value = flightData.departureTime || '';
						document.getElementById('inputArrivalDate').value = flightData.arrivalDate || '';
						document.getElementById('inputArrivalTime').value = flightData.arrivalTime || '';
					});

				</script>

				<script>
					document.getElementById('updateDateBtn').addEventListener('click', async function (e) {
						e.preventDefault(); // prevent form from submitting normally

						const flightId = document.getElementById('flightId').value;

						const updatedData = {
							departureDate: document.getElementById('inputDepartureDate').value,
							departureTime: document.getElementById('inputDepartureTime').value,
							arrivalDate: document.getElementById('inputArrivalDate').value,
							arrivalTime: document.getElementById('inputArrivalTime').value,
						};

						try {
							const response = await fetch(`/update-dates?id=${flightId}`, {
								method: 'PUT',
								headers: {
									'Content-Type': 'application/json'
								},
								body: JSON.stringify(updatedData)
							});

							if (!response.ok) {
								throw new Error('Failed to update flight');
							}

							const result = await response.json();
Swal.fire({
  icon: 'success',
  title: 'Success',
  text: 'Flight updated successfully!',
  confirmButtonText: 'OK'
}).then(() => window.location.reload());
						} catch (error) {
							console.error('Error:', error);
Swal.fire({
  icon: 'error',
  title: 'Update Failed',
  text: 'Error updating flight.',
  confirmButtonText: 'OK'
});						}
					});

				</script>

				<script>
					const flightModal = document.getElementById('flightModal');

					flightModal.addEventListener('show.bs.modal', function (event) {
						const button = event.relatedTarget;
						const flightData = JSON.parse(button.getAttribute('data-flight'));

						// Main flight details
						document.getElementById('flightId').value = flightData._id;
						document.getElementById('inventoryId').value = flightData.inventoryId || '';
						document.getElementById('from').value = flightData.departureName || '';
						document.getElementById('to').value = flightData.arrivalName || '';
						document.getElementById('fromCode').value = flightData.from || '';
						document.getElementById('toCode').value = flightData.to || '';
						document.getElementById('departureDate').value = flightData.departureDate || '';
						document.getElementById('arrivalDate').value = flightData.arrivalDate || '';
						document.getElementById('departureTime').value = flightData.departureTime || '';
						document.getElementById('arrivalTime').value = flightData.arrivalTime || '';
						document.getElementById('duration').value = flightData.duration || '';
						document.getElementById('fromCity').value = flightData.fromCity || '';
						document.getElementById('toCity').value = flightData.toCity || '';
						document.getElementById('fromCountry').value = flightData.fromCountry || '';
						document.getElementById('toCountry').value = flightData.toCountry || '';

						// Clear existing stops if any
						const stopsContainer = document.getElementById('stopsContainer');
						stopsContainer.innerHTML = '';

						// Add stops dynamically
						if (flightData.stops && flightData.stops.length > 0) {
							flightData.stops.forEach((stop, index) => {
								const stopHTML = `
				<div class="col-12"><hr><strong>Stop ${index}</strong></div>
				<div class="col-md-4">
				  <label class="form-label">From</label>
				  <input type="text" class="form-control stop-from" value="${stop.from || ''}" >
				</div>
				<div class="col-md-4">
				  <label class="form-label">To</label>
				  <input type="text" class="form-control stop-from" value="${stop.to || ''}" >
				</div>
				<div class="col-md-3">
				  <label class="form-label">From Code</label>
				  <input type="text" class="form-control stop-from-code" value="${stop.fromCode || ''}" >
				</div>
				<div class="col-md-3">
				  <label class="form-label">To Code</label>
				  <input type="text" class="form-control stop-to-code" value="${stop.toCode || ''}" >
				</div>
				<div class="col-md-3">
				  <label class="form-label">From Terminal</label>
				  <input type="text" class="form-control stop-from-terminal" value="${stop.fromTerminal || ''}" >
				</div>
				<div class="col-md-3">
				  <label class="form-label">To Terminal</label>
				  <input type="text" class="form-control stop-to-terminal" value="${stop.toTerminal || ''}" >
				</div>
				<div class="col-md-3">
				  <label class="form-label">Flight Number</label>
				  <input type="text" class="form-control stop-flight-number" value="${stop.flightNumber || ''}" >
				</div>
				<div class="col-md-3">
				  <label class="form-label">Airline</label>
				  <input type="text" class="form-control stop-airline" value="${stop.airline || ''}" >
				</div>
				<div class="col-md-3">
				  <label class="form-label">Departure Date</label>
				  <input type="text" class="form-control stop-departure-day dateInput" value="${stop.departureDay || ''}" >
				</div>
				<div class="col-md-3">
				  <label class="form-label">Arrival Date</label>
				  <input type="text" class="form-control stop-arrival-day dateInput" value="${stop.arrivalDay || ''}" >
				</div>
				<div class="col-md-3">
				  <label class="form-label">Departure Time</label>
				  <input type="time" class="form-control stop-departure-time" value="${stop.departureTime || ''}" >
				</div>
				<div class="col-md-3">
				  <label class="form-label">Arrival Time</label>
				  <input type="time" class="form-control stop-arrival-time" value="${stop.arrivalTime || ''}" >
				</div>
				<div class="col-md-3">
				  <label class="form-label">Stop Duration (in sec)</label>
				  <input type="text" class="form-control stop-duration" value="${stop.stopDuration || ''}" >
				</div>
				<div class="col-md-3">
				  <label class="form-label">Departure City</label>
				  <input type="text" class="form-control stop-departure-city" value="${stop.departureCity || ''}" >
				</div>
				<div class="col-md-3">
				  <label class="form-label">Arrival City</label>
				  <input type="text" class="form-control stop-arrival-city" value="${stop.arrivalCity || ''}" >
				</div>
				<div class="col-md-3">
				  <label class="form-label">Airline Code</label>
				  <input type="text" class="form-control stop-airline-code" value="${stop.airlineCode || ''}" >
				</div>
				<div class="col-md-3">
				  <label class="form-label">Airline Logo</label>
				  <input type="text" class="form-control stop-airline-logo" value="${stop.airlineLogo || ''}" >
				</div>
			  `;
								stopsContainer.insertAdjacentHTML('beforeend', stopHTML);
							});
						}

						// Pricing and baggage
						const invDate = flightData.inventoryDates?.[0] || {};
						document.getElementById('pnr').value = invDate.pnr || '';
						document.getElementById('seats').value = invDate.seats || '';
						document.getElementById('adults').value = invDate.fare?.adults || '';
						document.getElementById('infants').value = invDate.fare?.infants || '';
						document.getElementById('cab').value = flightData.baggage?.adult?.cabin?.weightPerPiece || '';
						document.getElementById('checkin').value = flightData.baggage?.adult?.checkIn?.weightPerPiece || '';

						// Status
						document.getElementById('status').value = flightData.status || 'inactive';
					});
				</script>

				<script>
					document.getElementById('updateFlightBtn').addEventListener('click', async function () {
						const form = document.getElementById('flightForm');

						const getValue = (id) => document.getElementById(id)?.value || '';
						const flightId = getValue('flightId');

						const stopBlocks = document.querySelectorAll('.stop-block');
						const stops = [];

						stopBlocks.forEach((block, index) => {
							stops.push({
								from: block.querySelector('.stop-from')?.value || '',
								to: block.querySelector('.stop-to')?.value || '',
								fromCode: block.querySelector('.stop-from-code')?.value || '',
								toCode: block.querySelector('.stop-to-code')?.value || '',
								fromTerminal: block.querySelector('.stop-from-terminal')?.value || '',
								toTerminal: block.querySelector('.stop-to-terminal')?.value || '',
								flightNumber: block.querySelector('.stop-flight-number')?.value || '',
								airline: block.querySelector('.stop-airline')?.value || '',
								departureDay: block.querySelector('.stop-departure-day')?.value || '',
								arrivalDay: block.querySelector('.stop-arrival-day')?.value || '',
								departureTime: block.querySelector('.stop-departure-time')?.value || '',
								arrivalTime: block.querySelector('.stop-arrival-time')?.value || '',
								stopDuration: block.querySelector('.stop-duration')?.value || '',
								departureCity: block.querySelector('.stop-departure-city')?.value || '',
								arrivalCity: block.querySelector('.stop-arrival-city')?.value || '',
								airlineCode: block.querySelector('.stop-airline-code')?.value || '',
								airlineLogo: block.querySelector('.stop-airline-logo')?.value || ''
							});
						});

						const flightData = {
							flightId: getValue('flightId'),
							inventoryId: getValue('inventoryId'),
							from: getValue('fromCode'),
							to: getValue('toCode'),
							departureName: getValue('from'),
							arrivalName: getValue('to'),
							departureDate: getValue('departureDate'),
							arrivalDate: getValue('arrivalDate'),
							departureTime: getValue('departureTime'),
							arrivalTime: getValue('arrivalTime'),
							duration: getValue('duration'),
							fromCity: getValue('fromCity'),
							toCity: getValue('toCity'),
							fromCountry: getValue('fromCountry'),
							toCountry: getValue('toCountry'),
							stops: stops,
							inventoryDates: [{
								pnr: getValue('pnr'),
								seats: getValue('seats'),
								fare: {
									adults: getValue('adults'),
									infants: getValue('infants'),
								}
							}],
							baggage: {
								adult: {
									cabin: { weightPerPiece: getValue('cab') },
									checkIn: { weightPerPiece: getValue('checkin') }
								}
							},
							status: getValue('status'),
						};

						try {
							const response = await fetch(`/update-listing?id=${flightId}`, {
								method: 'PUT',
								headers: {
									'Content-Type': 'application/json'
								},
								body: JSON.stringify(flightData)
							});

							if (!response.ok) {
								throw new Error('Failed to update flight');
							}

							const result = await response.json();
							Swal.fire({
  icon: 'success',
  title: 'Success',
  text: 'Flight updated successfully!',
  confirmButtonText: 'OK'
}).then(() => window.location.reload());
						} catch (error) {
							console.error('Error:', error);
Swal.fire({
  icon: 'error',
  title: 'Update Failed',
  text: 'Error updating flight.',
  confirmButtonText: 'OK'
});
						}
					});
				</script>

				<script>
					function initFlatpickrOnNewDateInputs(container) {
						container.querySelectorAll(".dateInput:not(.flatpickr-input)").forEach(input => {
							flatpickr(input, {
								dateFormat: "d M Y",
								defaultDate: "today",
								allowInput: true
							});
						});
					}

				</script>

				<script>
					document.addEventListener("DOMContentLoaded", () => {
						document.querySelectorAll('.changeStatusToggle').forEach(toggle => {
							toggle.addEventListener('change', async function (event) {
								const checkbox = this;
								const wasChecked = !checkbox.checked; // Save original state before toggle
								const flightId = checkbox.getAttribute('data-id');
								const newStatus = checkbox.getAttribute('data-status');

								if (!flightId || !newStatus) {
									console.error('Missing flight ID or status.');
									return;
								}

								const confirmChange = confirm(`Are you sure you want to change the status to "${newStatus}"?`);
								if (!confirmChange) {
									checkbox.checked = wasChecked; // Revert checkbox state
									return;
								}

								try {
									const response = await fetch('/update-status', {
										method: 'PUT',
										headers: {
											'Content-Type': 'application/json'
										},
										body: JSON.stringify({
											flightId: flightId,
											newStatus: newStatus
										})
									});

									if (!response.ok) {
										throw new Error('Status update failed');
									}

									// ✅ Update the status text
									const statusLabel = checkbox.closest('td').querySelector('.status-label');
									statusLabel.textContent = newStatus.charAt(0).toUpperCase() + newStatus.slice(1);

									// ✅ Update the data-status to reflect the next toggle
									checkbox.setAttribute('data-status', newStatus === 'active' ? 'inactive' : 'active');

Swal.fire({
  icon: 'success',
  title: 'Updated',
  text: 'Status updated successfully!',
  confirmButtonText: 'OK'
});
								} catch (err) {
Swal.fire({
  icon: 'error',
  title: 'Failed',
  text: 'Error updating status',
  confirmButtonText: 'OK'
});
									checkbox.checked = wasChecked; // Revert on error too
								}
							});
						});
					});

				</script>

				<script>
					document.addEventListener('DOMContentLoaded', function () {
						flatpickr(".dateInput", {
							dateFormat: "d M Y",
							defaultDate: "today",
							allowInput: true
						});
					});
				</script>

				<script>
					document.querySelectorAll('.user-booking-btn').forEach(button => {
						button.addEventListener('click', function (e) {
							e.preventDefault();

							const flightId = this.getAttribute('data-flight-id');

							if (flightId) {
								window.location.href = `/user-bookings?flightId=${flightId}`;
							} else {
Swal.fire({
  icon: 'warning',
  title: 'Missing Flight ID',
  text: 'Flight ID missing.',
  confirmButtonText: 'OK'
});							}
						});
					});
				</script>

				<script>
					document.querySelectorAll('.transaction-btn').forEach(button => {
						button.addEventListener('click', function (e) {
							e.preventDefault();

							const flightId = this.getAttribute('data-flight-id');

							if (flightId) {
								window.location.href = `/transactions?flightId=${flightId}`;
							} else {
Swal.fire({
  icon: 'warning',
  title: 'Missing Flight ID',
  text: 'Flight ID missing.',
  confirmButtonText: 'OK'
});							}
						});
					});
				</script>

				<!-- Flight detail modal START -->
				<div class="modal fade" id="flightdetail" aria-hidden="true">
					<div class="modal-dialog modal-lg">
						<div class="modal-content">
							<!-- Title -->
							<div class="modal-header">
								<h5 class="modal-title">Flight Details</h5>
								<button type="button" class="btn-close" data-bs-dismiss="modal"
									aria-label="Close"></button>
							</div>

							<!-- Body -->
							<div class="modal-body p-3">
								<!-- Tabs START -->
								<ul class="nav nav-pills nav-justified nav-responsive bg-primary bg-opacity-10 rounded p-2 mb-3"
									id="flight-pills-tab" role="tablist">
									<!-- Tab item -->
									<li class="nav-item" role="presentation">
										<button class="nav-link active mb-0" id="flight-info" data-bs-toggle="pill"
											data-bs-target="#flight-info-tab" type="button" role="tab"
											aria-controls="flight-info-tab" aria-selected="true">Flight
											Information</button>
									</li>

									<!-- Tab item -->
									<li class="nav-item" role="presentation">
										<button class="nav-link mb-0" id="flight-baggage" data-bs-toggle="pill"
											data-bs-target="#flight-baggage-tab" type="button" role="tab"
											aria-controls="flight-baggage-tab" aria-selected="false">Baggage
											Rules</button>
									</li>

								</ul>
								<!-- Tabs END -->

								<!-- Tab content START -->
								<div class="tab-content mb-0" id="flight-pills-tabContent">

									<!-- Content item START -->
									<div class="tab-pane fade show active" id="flight-info-tab" role="tabpanel"
										aria-labelledby="flight-info">
										<div class="card border">

											<!-- Card header -->
											<div class="card-header">
												<div class="d-sm-flex justify-content-sm-between align-items-center">
													<!-- Airline Name -->
													<div class="d-flex mb-2 mb-sm-0">
														<img src="assets/images/element/09.svg" class="w-40px me-2"
															alt="">
														<h6 class="fw-normal mb-0">Phillippines Airline (PA - 5620)</h6>
													</div>
												</div>
											</div>

											<!-- Card body START -->
											<div class="card-body p-4">
												<!-- Ticket item START -->
												<div class="row g-4">
													<!-- Airport detail -->
													<div class="col-sm-4">
														<!-- Title -->
														<h4>BOM</h4>
														<h6 class="mb-0">14:50</h6>
														<p class="mb-0">Chhatrapati Shivaji International Airport</p>
													</div>

													<!-- Time -->
													<div class="col-sm-4 my-sm-auto text-center">
														<!-- Time -->
														<h5>9hr 50min</h5>

														<div class="position-relative my-4">
															<!-- Line -->
															<hr class="bg-primary opacity-5 position-relative">
															<!-- Icon -->
															<div
																class="icon-md bg-primary text-white rounded-circle position-absolute top-50 start-50 translate-middle">
																<i class="fa-solid fa-fw fa-plane rtl-flip"></i>
															</div>
														</div>
													</div>

													<!-- Airport detail -->
													<div class="col-sm-4">
														<!-- Title -->
														<h4>CDG</h4>
														<h6 class="mb-0">11:50</h6>
														<p class="mb-0">Ch. De Gaulle, Paris, France</p>
													</div>
												</div>
												<!-- Ticket item END -->

												<!-- Divider -->
												<div class="bg-light text-center fw-normal rounded-2 mt-3 mb-4 p-2">
													Change of planes: 3h 15m Layover in France
												</div>

												<!-- Ticket item START -->
												<div class="row g-4">
													<!-- Airport detail -->
													<div class="col-sm-4">
														<!-- Title -->
														<h4>CDG</h4>
														<h6 class="mb-0">2:50</h6>
														<p class="mb-0">Ch. De Gaulle, Paris, France</p>
													</div>

													<!-- Time -->
													<div class="col-sm-4 my-sm-auto text-center">
														<!-- Time -->
														<h5>5hr 50min</h5>

														<div class="position-relative my-4">
															<!-- Line -->
															<hr class="bg-primary opacity-5 position-relative">
															<!-- Icon -->
															<div
																class="icon-md bg-primary text-white rounded-circle position-absolute top-50 start-50 translate-middle">
																<i class="fa-solid fa-fw fa-plane rtl-flip"></i>
															</div>
														</div>
													</div>

													<!-- Airport detail -->
													<div class="col-sm-4">
														<!-- Title -->
														<h4>JFK</h4>
														<h6 class="mb-0">7:35</h6>
														<p class="mb-0">John F Kennedy Intl-NY</p>
													</div>
												</div>
												<!-- Ticket item END -->
											</div>
											<!-- Card body END -->
										</div>
									</div>
									<!-- Content item END -->

									<!-- Content item START -->
									<div class="tab-pane fade" id="flight-baggage-tab" role="tabpanel"
										aria-labelledby="flight-baggage">
										<div class="card border">
											<!-- Card header -->
											<div class="card-header d-flex align-items-center border-bottom">
												<!-- Title -->
												<img src="assets/images/element/09.svg" class="h-20px me-1" alt="">
												<h5 class="card-title mb-0">BOM - CDG</h5>
											</div>

											<!-- Card body -->
											<div class="card-body">
												<!-- Table START -->
												<div class="table-responsive-lg">
													<table class="table caption-bottom mb-0">
														<!-- Caption -->
														<caption class="pb-0">*1PC = 23KG</caption>
														<!-- Table head -->
														<thead class="table-dark">
															<tr>
																<th scope="col" class="border-0 rounded-start">Baggage
																	Type</th>
																<th scope="col" class="border-0">Check In</th>
																<th scope="col" class="border-0 rounded-end">Cabin</th>
															</tr>
														</thead>
														<!-- Table body -->
														<tbody class="border-top-0">
															<tr>
																<td>Adult</td>
																<td>2 PC</td>
																<td>7 Kg</td>
															</tr>
														</tbody>
													</table>
												</div>
												<!-- Table END -->
											</div>
										</div>
									</div>
									<!-- Content item END -->

								</div>
								<!-- Tab content END -->
							</div>
						</div>
					</div>
				</div>
				<!-- Flight detail modal END -->

				<script>
					document.addEventListener('DOMContentLoaded', function () {
						const flightDetailButtons = document.querySelectorAll('.flight-detail-btn');

						flightDetailButtons.forEach(button => {
							button.addEventListener('click', function () {
								const flightData = JSON.parse(this.getAttribute('data-flight'));

								const stops = flightData.stops || [];

								// ========= Flight Info Tab =========
								const flightInfoTab = document.getElementById('flight-info-tab');

								// Clear previous content
								flightInfoTab.innerHTML = '';

								// Create card wrapper
								const card = document.createElement('div');
								card.className = 'card border';

								// Card header
								const cardHeader = document.createElement('div');
								cardHeader.className = 'card-header';

								const headerFlex = document.createElement('div');
								headerFlex.className = 'd-sm-flex justify-content-sm-between align-items-center';

								const airlineDiv = document.createElement('div');
								airlineDiv.className = 'd-flex mb-2 mb-sm-0';

								const airlineImg = document.createElement('img');
								airlineImg.src = stops[0]?.airlineLogo || 'assets/images/element/09.svg';
								airlineImg.className = 'w-40px me-2';
								airlineImg.alt = '';

								const airlineText = document.createElement('h6');
								airlineText.className = 'fw-normal mb-0';
								airlineText.textContent = `${stops[0]?.airline || 'Airline'} (${stops[0]?.airlineCode} - ${stops[0]?.flightNumber})`;

								airlineDiv.appendChild(airlineImg);
								airlineDiv.appendChild(airlineText);

								const travelClass = document.createElement('h6');
								travelClass.className = 'fw-normal mb-0';

								headerFlex.appendChild(airlineDiv);
								headerFlex.appendChild(travelClass);
								cardHeader.appendChild(headerFlex);
								card.appendChild(cardHeader);

								// Card body
								const cardBody = document.createElement('div');
								cardBody.className = 'card-body p-4';

								// Loop through stops and render each segment
								for (let i = 0; i < stops.length; i++) {
									const stop = stops[i];
									const nextStop = stops[i + 1];

									const row = document.createElement('div');
									row.className = 'row g-4';

									// From Airport
									const fromCol = document.createElement('div');
									fromCol.className = 'col-sm-4';
									fromCol.innerHTML = `
                <h4>${stop.fromCode.toUpperCase()}</h4>
                <h6 class="mb-0">${stop.departureTime}</h6>
                <p class="mb-0">${stop.departureCity}, ${stop.from}</p>
                `;
									// Flight Duration
									const midCol = document.createElement('div');
									midCol.className = 'col-sm-4 my-sm-auto text-center';
									midCol.innerHTML = `
                <h5>${stop.stopDuration}</h5>
                <div class="position-relative my-4">
                <hr class="bg-primary opacity-5 position-relative">
                <div class="icon-md bg-primary text-white rounded-circle position-absolute top-50 start-50 translate-middle">
                  <i class="fa-solid fa-fw fa-plane rtl-flip"></i>
                </div>
                </div>
                `;

									// To Airport
									const toCol = document.createElement('div');
									toCol.className = 'col-sm-4';
									toCol.innerHTML = `
                <h4>${stop.toCode.toUpperCase()}</h4>
                <h6 class="mb-0">${stop.arrivalTime}</h6>
                <p class="mb-0">${stop.arrivalCity}, ${stop.to}</p>
                `;

									row.appendChild(fromCol);
									row.appendChild(midCol);
									row.appendChild(toCol);

									cardBody.appendChild(row);

									// Add Layover if not last stop

									if (nextStop) {
										// Parse arrival time of current stop and departure time of next stop
										const arrivalTime = stop.arrivalTime; // e.g., "17:25"
										const nextDepartureTime = nextStop.departureTime; // e.g., "18:40"

										// Convert both to minutes
										const [arrHr, arrMin] = arrivalTime.split(':').map(Number);
										const [depHr, depMin] = nextDepartureTime.split(':').map(Number);

										const arrivalInMinutes = arrHr * 60 + arrMin;
										const departureInMinutes = depHr * 60 + depMin;

										let layoverMin = departureInMinutes - arrivalInMinutes;

										// Handle overnight flights (e.g., arrival at 23:30, departure at 01:15 next day)
										if (layoverMin < 0) layoverMin += 24 * 60;

										// Convert to hrs and mins
										const layoverHr = Math.floor(layoverMin / 60);
										const layoverMins = layoverMin % 60;

										// Create layover text
										let layoverText = 'Layover: ';
										if (layoverHr > 0) layoverText += `${layoverHr} h `;
										if (layoverMins > 0 || layoverHr === 0) layoverText += `${layoverMins} m `;
										layoverText += `in ${stop.arrivalCity}`;

										const layoverDiv = document.createElement('div');
										layoverDiv.className = 'bg-light text-center fw-normal rounded-2 mt-3 mb-4 p-2 text-danger';
										layoverDiv.textContent = layoverText;

										cardBody.appendChild(layoverDiv);
									}

								}

								card.appendChild(cardBody);
								flightInfoTab.appendChild(card);

								// ========= Baggage Tab =========
								const baggageTab = document.getElementById('flight-baggage-tab');
								baggageTab.innerHTML = ''; // Clear previous

								const baggage = flightData.baggage || {};
								const baggageCard = document.createElement('div');
								baggageCard.className = 'card border';

								const baggageHeader = document.createElement('div');
								baggageHeader.className = 'card-header d-flex align-items-center border-bottom';
								baggageHeader.innerHTML = `
          <img src="assets/images/element/09.svg" class="h-20px me-1" alt="">
          <h5 class="card-title mb-0">${stops[0]?.fromCode.toUpperCase()} - ${stops[stops.length - 1]?.toCode.toUpperCase()}</h5>
        `;
								baggageCard.appendChild(baggageHeader);

								const baggageBody = document.createElement('div');
								baggageBody.className = 'card-body';
								baggageBody.innerHTML = `
          <div class="table-responsive-lg">
            <table class="table caption-bottom mb-0">
              <caption class="pb-0">*1PC = 30KG</caption>
              <thead class="table-dark">
                <tr>
                  <th scope="col" class="border-0 rounded-start">Baggage Type</th>
                  <th scope="col" class="border-0">Check In</th>
                  <th scope="col" class="border-0 rounded-end">Cabin</th>
                </tr>
              </thead>
              <tbody class="border-top-0">
                ${baggage.adult ? `
                  <tr>
                    <td>Adult</td>
                    <td>${baggage.adult.checkIn.numberOfPieces} PC </td>
                    <td>${baggage.adult.cabin.weightPerPiece} Kg</td>
                  </tr>` : ''
									}
                ${baggage.child ? `
                  <tr>
                    <td>Child</td>
                    <td>${baggage.child.checkIn.numberOfPieces} PC</td>
                    <td>${baggage.child.cabin.weightPerPiece} Kg</td>
                  </tr>` : ''
									}
                ${baggage.infant ? `
                  <tr>
                    <td>Infant</td>
                    <td>${baggage.infant.checkIn.numberOfPieces} PC </td>
                    <td>${baggage.infant.cabin.weightPerPiece} Kg</td>
                  </tr>` : ''
									}
              </tbody>
            </table>
          </div>
        `;
								baggageCard.appendChild(baggageBody);
								baggageTab.appendChild(baggageCard);

								// Show the modal
								const flightDetailModal = new bootstrap.Modal(document.getElementById('flightdetail'));
								flightDetailModal.show();

							});
						});
					});
				</script>

				<script>
					document.addEventListener("DOMContentLoaded", function () {
						const modal = document.getElementById("flightdetail");

						modal.addEventListener("hidden.bs.modal", function () {
							// Remove any extra modal-backdrop elements that might be lingering
							document.querySelectorAll(".modal-backdrop").forEach((backdrop) => backdrop.remove());

							// Also ensure the body class is removed to prevent background overlay issues
							document.body.classList.remove("modal-open");
						});

						modal.addEventListener("shown.bs.modal", function () {
							// If there are multiple backdrops, remove extras
							const backdrops = document.querySelectorAll(".modal-backdrop");
							if (backdrops.length > 1) {
								backdrops[0].remove(); // Remove the first extra backdrop
							}
						});
					});

				</script>

				<style>
					.custom-switch {
						position: relative;
						display: inline-block;
						width: 40px;
						height: 20px;
					}

					.custom-switch input {
						opacity: 0;
						width: 0;
						height: 0;
					}

					.slider {
						position: absolute;
						cursor: pointer;
						top: 0;
						left: 0;
						right: 0;
						bottom: 0;
						background-color: #ccc;
						transition: 0.4s;
						border-radius: 20px;
					}

					.slider:before {
						position: absolute;
						content: "";
						height: 14px;
						width: 14px;
						left: 3px;
						bottom: 3px;
						background-color: white;
						transition: 0.4s;
						border-radius: 50%;
					}

					input:checked+.slider {
						background-color: #4caf50;
					}

					input:checked+.slider:before {
						transform: translateX(20px);
					}
				</style>

		</main>
		<!-- **************** MAIN CONTENT END **************** -->

		<%- include('./partials/footer') %>